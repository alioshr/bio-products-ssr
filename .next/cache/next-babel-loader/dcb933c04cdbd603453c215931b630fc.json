{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useLayoutEffect } from \"react\";\nvar isBrowser = true;\n\nvar getScrolledPosition = function getScrolledPosition(_ref) {\n  var element = _ref.element,\n      useWindow = _ref.useWindow;\n  if (!isBrowser) return {\n    x: 0,\n    y: 0\n  };\n  var target = element ? element.current : document.body;\n  var position = target.getBoundingClientRect();\n  return useWindow ? {\n    x: window.scrollX,\n    y: window.scrollY\n  } : {\n    x: position.left,\n    y: position.top,\n    height: position.height,\n    bottom: position.bottom\n  };\n};\n\nexport var useScrollPosition = function useScrollPosition(effect, deps, element, useWindow, wait) {\n  _s();\n\n  var position = useRef(getScrolledPosition({\n    useWindow: useWindow\n  }));\n  var throttleTimeout = null;\n\n  var callBack = function callBack() {\n    var currPos = getScrolledPosition({\n      element: element,\n      useWindow: useWindow\n    });\n    effect({\n      prevPos: position.current,\n      currPos: currPos\n    });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n\n  useEf(function () {\n    var handleScroll = function handleScroll() {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return function () {\n      return window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, deps);\n};\n\n_s(useScrollPosition, \"AcCdCDbjL/jvVLB2XWcxPnElBsI=\", true);","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Hooks/useScrollPosition.js"],"names":["useRef","useLayoutEffect","isBrowser","getScrolledPosition","element","useWindow","x","y","target","current","document","body","position","getBoundingClientRect","window","scrollX","scrollY","left","top","height","bottom","useScrollPosition","effect","deps","wait","throttleTimeout","callBack","currPos","prevPos","useEf","handleScroll","setTimeout","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,eAAjB,QAAwC,OAAxC;AAEA,IAAMC,SAAS,OAAf;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA4B;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACtD,MAAI,CAACH,SAAL,EAAgB,OAAO;AAAEI,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAP;AAEhB,MAAMC,MAAM,GAAGJ,OAAO,GAAGA,OAAO,CAACK,OAAX,GAAqBC,QAAQ,CAACC,IAApD;AACA,MAAMC,QAAQ,GAAGJ,MAAM,CAACK,qBAAP,EAAjB;AACA,SAAOR,SAAS,GACZ;AAAEC,IAAAA,CAAC,EAAEQ,MAAM,CAACC,OAAZ;AAAqBR,IAAAA,CAAC,EAAEO,MAAM,CAACE;AAA/B,GADY,GAEZ;AACEV,IAAAA,CAAC,EAAEM,QAAQ,CAACK,IADd;AAEEV,IAAAA,CAAC,EAAEK,QAAQ,CAACM,GAFd;AAGEC,IAAAA,MAAM,EAAEP,QAAQ,CAACO,MAHnB;AAIEC,IAAAA,MAAM,EAAER,QAAQ,CAACQ;AAJnB,GAFJ;AAQD,CAbD;;AAeA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD,EAASC,IAAT,EAAenB,OAAf,EAAwBC,SAAxB,EAAmCmB,IAAnC,EAA4C;AAAA;;AAC3E,MAAMZ,QAAQ,GAAGZ,MAAM,CAACG,mBAAmB,CAAC;AAAEE,IAAAA,SAAS,EAATA;AAAF,GAAD,CAApB,CAAvB;AACA,MAAIoB,eAAe,GAAG,IAAtB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,OAAO,GAAGxB,mBAAmB,CAAC;AAAEC,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,SAAS,EAATA;AAAX,KAAD,CAAnC;AACAiB,IAAAA,MAAM,CAAC;AAAEM,MAAAA,OAAO,EAAEhB,QAAQ,CAACH,OAApB;AAA6BkB,MAAAA,OAAO,EAAPA;AAA7B,KAAD,CAAN;AACAf,IAAAA,QAAQ,CAACH,OAAT,GAAmBkB,OAAnB;AACAF,IAAAA,eAAe,GAAG,IAAlB;AACD,GALD;;AAMAI,EAAAA,KAAK,CAAC,YAAM;AACV,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,UAAIN,IAAJ,EAAU;AACR,YAAIC,eAAe,KAAK,IAAxB,EAA8B;AAC5BA,UAAAA,eAAe,GAAGM,UAAU,CAACL,QAAD,EAAWF,IAAX,CAA5B;AACD;AACF,OAJD,MAIO;AACLE,QAAAA,QAAQ;AACT;AACF,KARD;;AASAZ,IAAAA,MAAM,CAACkB,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACA,WAAO;AAAA,aAAMhB,MAAM,CAACmB,mBAAP,CAA2B,QAA3B,EAAqCH,YAArC,CAAN;AAAA,KAAP;AACD,GAZI,EAYFP,IAZE,CAAL;AAaD,CAtBM;;GAAMF,iB","sourcesContent":["import { useRef, useLayoutEffect } from \"react\";\n\nconst isBrowser = typeof window !== `undefined`;\n\nconst getScrolledPosition = ({ element, useWindow }) => {\n  if (!isBrowser) return { x: 0, y: 0 };\n\n  const target = element ? element.current : document.body;\n  const position = target.getBoundingClientRect();\n  return useWindow\n    ? { x: window.scrollX, y: window.scrollY }\n    : {\n        x: position.left,\n        y: position.top,\n        height: position.height,\n        bottom: position.bottom,\n      };\n};\n\nexport const useScrollPosition = (effect, deps, element, useWindow, wait) => {\n  const position = useRef(getScrolledPosition({ useWindow }));\n  let throttleTimeout = null;\n  const callBack = () => {\n    const currPos = getScrolledPosition({ element, useWindow });\n    effect({ prevPos: position.current, currPos });\n    position.current = currPos;\n    throttleTimeout = null;\n  };\n  useEf(() => {\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, deps);\n};\n"]},"metadata":{},"sourceType":"module"}