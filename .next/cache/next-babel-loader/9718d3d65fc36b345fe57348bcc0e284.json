{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { ImageInnerWrapper, Image, ImagesMarker, ViewImages, ImagesWrapper, ImagesMarkerWrapper, ImageArrow } from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nconst ImagesModal = ({\n  images,\n  state,\n  closeModal\n}) => {\n  const {\n    0: activePic,\n    1: setActivePic\n  } = useState(0);\n  const [width, height] = useWindowDimension();\n  const {\n    0: imgWidth,\n    1: setImgWidth\n  } = useState([]);\n  const elRefs = React.useRef([]);\n  const wrapperRef = useRef();\n  const imgs = images.paths.map((img, i) => __jsx(ImageInnerWrapper, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    displayWidth: width,\n    displayHeight: height,\n    id: img,\n    src: img,\n    alt: images.alt,\n    modal: true,\n    slide: activePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  })));\n  useEffect(() => {\n    const length = imgs.length;\n\n    if (elRefs.current.length !== length) {\n      elRefs.current = Array(length).fill().map((_, i) => elRefs.current[i] || /*#__PURE__*/React.createRef());\n    }\n\n    if (elRefs.current.length === length && elRefs.current[0].current !== null) {\n      setImgWidth(elRefs.current.map(el => el.current.offsetWidth));\n    }\n  }, [elRefs.current]);\n  console.log(\"refs\", elRefs);\n  const markers = images.paths.map((a, i) => __jsx(ImagesMarker, {\n    onClick: () => setActivePic(i),\n    active: i === activePic,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n\n  const swapPicturesHandler = direction => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic(state => state + 1);\n    }\n\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic(state => state - 1);\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    size: \"2\",\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Gallery, {\n    rowWidth: \"100%\",\n    rowHeight: \"100%\",\n    markerActiveColor: \"orange\",\n    markerInactiveColor: \"gray\",\n    items: images.paths,\n    childProps: {\n      alt: `${images.alt}`\n    },\n    navColor: \"black\",\n    navInnerColor: \"white\",\n    navSize: 4,\n    navInnerHoverColor: \"orange\",\n    withNav: true,\n    navPosX: -100,\n    navPosY: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), __jsx(Backdrop, {\n    forElement: false,\n    onClick: closeModal,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ImagesModal; // <ImagesWrapper>{imgs}</ImagesWrapper>\n//         <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n//         <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n//           <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n//         </ImageArrow>\n//         <ImageArrow\n//           onClick={() => swapPicturesHandler(\"right\")}\n//           position=\"right\"\n//         >\n//           <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n//         </ImageArrow>","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js"],"names":["React","useState","Fragment","useRef","useEffect","ImageInnerWrapper","Image","ImagesMarker","ViewImages","ImagesWrapper","ImagesMarkerWrapper","ImageArrow","FontAwesomeIcon","faChevronRight","faChevronLeft","useWindowDimension","Backdrop","Gallery","ImagesModal","images","state","closeModal","activePic","setActivePic","width","height","imgWidth","setImgWidth","elRefs","wrapperRef","imgs","paths","map","img","i","alt","length","current","Array","fill","_","createRef","el","offsetWidth","console","log","markers","a","swapPicturesHandler","direction"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport {\n  ImageInnerWrapper,\n  Image,\n  ImagesMarker,\n  ViewImages,\n  ImagesWrapper,\n  ImagesMarkerWrapper,\n  ImageArrow,\n} from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [activePic, setActivePic] = useState(0);\n  const [width, height] = useWindowDimension();\n  const [imgWidth, setImgWidth] = useState([]);\n  const elRefs = React.useRef([]);\n  const wrapperRef = useRef();\n\n  const imgs = images.paths.map((img, i) => (\n    <ImageInnerWrapper key={i}>\n      <Image\n        displayWidth={width}\n        displayHeight={height}\n        id={img}\n        src={img}\n        alt={images.alt}\n        modal\n        slide={activePic}\n      />\n    </ImageInnerWrapper>\n  ));\n\n  useEffect(() => {\n    const length = imgs.length;\n    if (elRefs.current.length !== length) {\n      elRefs.current = Array(length)\n        .fill()\n        .map((_, i) => elRefs.current[i] || React.createRef());\n    }\n    if (\n      elRefs.current.length === length &&\n      elRefs.current[0].current !== null\n    ) {\n      setImgWidth(elRefs.current.map((el) => el.current.offsetWidth));\n    }\n  }, [elRefs.current]);\n  \n  console.log(\"refs\", elRefs)\n\n  const markers = images.paths.map((a, i) => (\n    <ImagesMarker\n      onClick={() => setActivePic(i)}\n      active={i === activePic}\n      key={i}\n    />\n  ));\n\n  const swapPicturesHandler = (direction) => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic((state) => state + 1);\n    }\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic((state) => state - 1);\n    }\n  };\n  return (\n    <Fragment>\n      <ViewImages size='2' displayWidth={width} displayHeight={height} state={state} s>\n        <Gallery \n        rowWidth=\"100%\"\n        rowHeight=\"100%\"\n        markerActiveColor=\"orange\"\n        markerInactiveColor=\"gray\"\n        items={images.paths}\n        childProps={{\n          alt: `${images.alt}`,\n        }}\n        navColor=\"black\"\n        navInnerColor=\"white\"\n        navSize={4}\n        navInnerHoverColor=\"orange\"\n        withNav={true}\n        navPosX={-100}\n        navPosY={50}/>\n      </ViewImages>\n      <Backdrop forElement={false} onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n\nexport default ImagesModal;\n\n\n// <ImagesWrapper>{imgs}</ImagesWrapper>\n//         <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n//         <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n//           <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n//         </ImageArrow>\n//         <ImageArrow\n//           onClick={() => swapPicturesHandler(\"right\")}\n//           position=\"right\"\n//         >\n//           <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n//         </ImageArrow>"]},"metadata":{},"sourceType":"module"}