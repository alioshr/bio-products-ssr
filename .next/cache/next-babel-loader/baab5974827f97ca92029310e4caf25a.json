{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { ImageInnerWrapper, Image, ImagesMarker, ViewImages, ImagesWrapper, ImagesMarkerWrapper, ImageArrow } from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\n\nvar ImagesModal = function ImagesModal(_ref) {\n  _s();\n\n  var images = _ref.images,\n      state = _ref.state,\n      closeModal = _ref.closeModal;\n\n  var _useState = useState(0),\n      activePic = _useState[0],\n      setActivePic = _useState[1];\n\n  var _useWindowDimension = useWindowDimension(),\n      _useWindowDimension2 = _slicedToArray(_useWindowDimension, 2),\n      width = _useWindowDimension2[0],\n      height = _useWindowDimension2[1];\n\n  var _useState2 = useState([]),\n      imgWidth = _useState2[0],\n      setImgWidth = _useState2[1];\n\n  var elRefs = React.useRef([]);\n  var wrapperRef = useRef();\n  var imgs = images.paths.map(function (img, i) {\n    return __jsx(ImageInnerWrapper, {\n      key: i,\n      ref: elRefs.current[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, __jsx(Image, {\n      displayWidth: width,\n      displayHeight: height,\n      id: img,\n      src: img,\n      alt: images.alt,\n      modal: true,\n      slide: activePic,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }));\n  }); // useEffect(() => {\n  //   const length = imgs.length;\n  //   if (elRefs.current.length !== length) {\n  //     elRefs.current = Array(length)\n  //       .fill()\n  //       .map((_, i) => elRefs.current[i] || React.createRef());\n  //   }\n  //   if (\n  //     elRefs.current.length === length &&\n  //     elRefs.current[0].current !== null\n  //   ) {\n  //     setImgWidth(elRefs.current.map((el) => el.current.offsetWidth));\n  //   }\n  // }, [elRefs.current]);\n\n  elRefs.current = Array(length).fill().map(function (_, i) {\n    return elRefs.current[i] || /*#__PURE__*/React.createRef();\n  });\n  console.log(\"refs\", elRefs);\n  var markers = images.paths.map(function (a, i) {\n    return __jsx(ImagesMarker, {\n      onClick: function onClick() {\n        return setActivePic(i);\n      },\n      active: i === activePic,\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    });\n  });\n\n  var swapPicturesHandler = function swapPicturesHandler(direction) {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic(function (state) {\n        return state + 1;\n      });\n    }\n\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic(function (state) {\n        return state - 1;\n      });\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(ImagesWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, imgs), __jsx(ImagesMarkerWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, markers), __jsx(ImageArrow, {\n    onClick: function onClick() {\n      return swapPicturesHandler(\"left\");\n    },\n    position: \"left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    size: \"4x\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), __jsx(ImageArrow, {\n    onClick: function onClick() {\n      return swapPicturesHandler(\"right\");\n    },\n    position: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronRight,\n    size: \"4x\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))), __jsx(Backdrop, {\n    forElement: false,\n    onClick: closeModal,\n    state: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ImagesModal, \"INtvXXapkzUBaqmcBEY8RDzhb34=\", false, function () {\n  return [useWindowDimension];\n});\n\n_c = ImagesModal;\nexport default ImagesModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesModal\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js"],"names":["React","useState","Fragment","useRef","useEffect","ImageInnerWrapper","Image","ImagesMarker","ViewImages","ImagesWrapper","ImagesMarkerWrapper","ImageArrow","FontAwesomeIcon","faChevronRight","faChevronLeft","useWindowDimension","Backdrop","useScrollPosition","ImagesModal","images","state","closeModal","activePic","setActivePic","width","height","imgWidth","setImgWidth","elRefs","wrapperRef","imgs","paths","map","img","i","current","alt","Array","length","fill","_","createRef","console","log","markers","a","swapPicturesHandler","direction"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport {\n  ImageInnerWrapper,\n  Image,\n  ImagesMarker,\n  ViewImages,\n  ImagesWrapper,\n  ImagesMarkerWrapper,\n  ImageArrow,\n} from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [activePic, setActivePic] = useState(0);\n  const [width, height] = useWindowDimension();\n  const [imgWidth, setImgWidth] = useState([]);\n  const elRefs = React.useRef([]);\n  const wrapperRef = useRef();\n\n  const imgs = images.paths.map((img, i) => (\n    <ImageInnerWrapper key={i} ref={elRefs.current[i]}>\n      <Image\n        displayWidth={width}\n        displayHeight={height}\n        id={img}\n        src={img}\n        alt={images.alt}\n        modal\n        slide={activePic}\n      />\n    </ImageInnerWrapper>\n  ));\n\n  // useEffect(() => {\n  //   const length = imgs.length;\n  //   if (elRefs.current.length !== length) {\n  //     elRefs.current = Array(length)\n  //       .fill()\n  //       .map((_, i) => elRefs.current[i] || React.createRef());\n  //   }\n  //   if (\n  //     elRefs.current.length === length &&\n  //     elRefs.current[0].current !== null\n  //   ) {\n  //     setImgWidth(elRefs.current.map((el) => el.current.offsetWidth));\n  //   }\n  // }, [elRefs.current]);\n\n  elRefs.current = Array(length)\n        .fill()\n        .map((_, i) => elRefs.current[i] || React.createRef());\n\n  console.log(\"refs\", elRefs)\n\n  const markers = images.paths.map((a, i) => (\n    <ImagesMarker\n      onClick={() => setActivePic(i)}\n      active={i === activePic}\n      key={i}\n    />\n  ));\n\n  const swapPicturesHandler = (direction) => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic((state) => state + 1);\n    }\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic((state) => state - 1);\n    }\n  };\n  return (\n    <Fragment>\n      <ViewImages displayWidth={width} displayHeight={height} state={state} s>\n        <ImagesWrapper>{imgs}</ImagesWrapper>\n        <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n        <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n          <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n        </ImageArrow>\n        <ImageArrow\n          onClick={() => swapPicturesHandler(\"right\")}\n          position=\"right\"\n        >\n          <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n        </ImageArrow>\n      </ViewImages>\n      <Backdrop forElement={false} onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n\nexport default ImagesModal;\n"]},"metadata":{},"sourceType":"module"}