{"ast":null,"code":"var INIT_PRODUCTS_OVERVIEW = \"INIT_PRODUCTS_OVERVIEW\";\nvar LOAD_PRODUCTS_CATALOG = \"LOAD_PRODUCTS_CATALOG\";\nexport var TEST = 'TEST';\nexport var testHandler = function testHandler() {\n  return {\n    type: TEST\n  };\n};\n\nvar prepInitProductsOverview = function prepInitProductsOverview() {\n  return {\n    type: INIT_PRODUCTS_OVERVIEW\n  };\n}; //got to change this dummy thing for http requests when implement the database\n\n\nexport var initProductsOverview = function initProductsOverview() {\n  return function (dispatch, store) {\n    var overview = store().productsReducer.overview;\n    var catalogOverview = [];\n\n    for (var key in overview) {\n      catalogOverview.push({\n        id: key,\n        config: overview[key]\n      });\n    }\n\n    dispatch(prepInitProductsOverview());\n    return catalogOverview;\n  };\n};\n\nvar prepLoadProductsCatalog = function prepLoadProductsCatalog() {\n  return {\n    type: LOAD_PRODUCTS_CATALOG\n  };\n};\n\nexport var loadProductsCatalog = function loadProductsCatalog(productId) {\n  return function (dispatch, store) {\n    var catalog = store().productsReducer.catalog;\n    var productDetail = {};\n\n    for (var key in catalog) {\n      if (key === productId) {\n        Object.assign(productDetail, catalog[key]);\n      }\n    }\n\n    dispatch(prepLoadProductsCatalog());\n    return productDetail;\n  };\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/store/actions/productsActions.js"],"names":["INIT_PRODUCTS_OVERVIEW","LOAD_PRODUCTS_CATALOG","TEST","testHandler","type","prepInitProductsOverview","initProductsOverview","dispatch","store","overview","productsReducer","catalogOverview","key","push","id","config","prepLoadProductsCatalog","loadProductsCatalog","productId","catalog","productDetail","Object","assign"],"mappings":"AAAA,IAAMA,sBAAsB,GAAG,wBAA/B;AACA,IAAMC,qBAAqB,GAAG,uBAA9B;AACA,OAAO,IAAMC,IAAI,GAAG,MAAb;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEF;AADH,GAAP;AAGH,CAJM;;AAOP,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACnC,SAAO;AACHD,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJD,C,CAKA;;;AACA,OAAO,IAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACtC,SAAO,UAACC,QAAD,EAAWC,KAAX,EAAqB;AACxB,QAAMC,QAAQ,GAAGD,KAAK,GAAGE,eAAR,CAAwBD,QAAzC;AACA,QAAME,eAAe,GAAG,EAAxB;;AACA,SAAI,IAAIC,GAAR,IAAeH,QAAf,EAAyB;AACrBE,MAAAA,eAAe,CAACE,IAAhB,CAAqB;AACjBC,QAAAA,EAAE,EAAEF,GADa;AAEjBG,QAAAA,MAAM,EAAEN,QAAQ,CAACG,GAAD;AAFC,OAArB;AAIH;;AACDL,IAAAA,QAAQ,CAACF,wBAAwB,EAAzB,CAAR;AACA,WAAOM,eAAP;AACH,GAXD;AAYH,CAbM;;AAeP,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAClC,SAAO;AACHZ,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJD;;AAMA,OAAO,IAAMgB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD,EAAe;AAC9C,SAAO,UAACX,QAAD,EAAWC,KAAX,EAAqB;AACxB,QAAMW,OAAO,GAAGX,KAAK,GAAGE,eAAR,CAAwBS,OAAxC;AACA,QAAMC,aAAa,GAAG,EAAtB;;AACA,SAAK,IAAIR,GAAT,IAAgBO,OAAhB,EAAyB;AACrB,UAAGP,GAAG,KAAKM,SAAX,EAAsB;AAClBG,QAAAA,MAAM,CAACC,MAAP,CAAcF,aAAd,EAA6BD,OAAO,CAACP,GAAD,CAApC;AACH;AACJ;;AACDL,IAAAA,QAAQ,CAACS,uBAAuB,EAAxB,CAAR;AACA,WAAOI,aAAP;AACH,GAVD;AAWH,CAZM","sourcesContent":["const INIT_PRODUCTS_OVERVIEW = \"INIT_PRODUCTS_OVERVIEW\";\nconst LOAD_PRODUCTS_CATALOG = \"LOAD_PRODUCTS_CATALOG\";\nexport const TEST = 'TEST';\n\nexport const testHandler = () => {\n    return {\n        type: TEST\n    }\n}\n\n\nconst prepInitProductsOverview = () => {\n    return {\n        type: INIT_PRODUCTS_OVERVIEW\n    }\n}\n//got to change this dummy thing for http requests when implement the database\nexport const initProductsOverview = () => {\n    return (dispatch, store) => {\n        const overview = store().productsReducer.overview;\n        const catalogOverview = [];\n        for(let key in overview) {\n            catalogOverview.push({\n                id: key,\n                config: overview[key]\n            })\n        }\n        dispatch(prepInitProductsOverview());\n        return catalogOverview;\n    }\n}\n\nconst prepLoadProductsCatalog = () => {\n    return {\n        type: LOAD_PRODUCTS_CATALOG\n    }\n}\n\nexport const loadProductsCatalog = (productId) => {\n    return (dispatch, store) => {\n        const catalog = store().productsReducer.catalog;\n        const productDetail = {};\n        for (let key in catalog) {\n            if(key === productId) {\n                Object.assign(productDetail, catalog[key])\n            }\n        }\n        dispatch(prepLoadProductsCatalog())\n        return productDetail;\n    }\n}"]},"metadata":{},"sourceType":"module"}