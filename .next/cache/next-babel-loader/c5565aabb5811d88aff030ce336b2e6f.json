{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport { ViewImages } from \"../../StyledComponents/productsItems\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nconst ImagesModal = ({\n  images,\n  state,\n  closeModal\n}) => {\n  const [width, height] = useWindowDimension();\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    size: \"2\",\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Gallery, {\n    rowWidth: \"100%\",\n    rowHeight: \"100%\",\n    markerActiveColor: \"orange\",\n    markerInactiveColor: \"white\",\n    items: images.paths,\n    childProps: {\n      alt: `${images.alt}`\n    },\n    navColor: \"transparent\",\n    navInnerColor: \"white\",\n    navSize: 4,\n    navInnerHoverColor: \"orange\",\n    withNav: true,\n    navPosX: -100,\n    navPosY: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), __jsx(Backdrop, {\n    forElement: false,\n    onClick: closeModal,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ImagesModal;","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js"],"names":["React","Fragment","ViewImages","useWindowDimension","Backdrop","Gallery","ImagesModal","images","state","closeModal","width","height","paths","alt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,QAEO,sCAFP;AAGA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAAmC;AACrD,QAAM,CAACC,KAAD,EAAQC,MAAR,IAAkBR,kBAAkB,EAA1C;AAEA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,GAAjB;AAAqB,IAAA,YAAY,EAAEO,KAAnC;AAA0C,IAAA,aAAa,EAAEC,MAAzD;AAAiE,IAAA,KAAK,EAAEH,KAAxE;AAA+E,IAAA,CAAC,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACA,IAAA,QAAQ,EAAC,MADT;AAEA,IAAA,SAAS,EAAC,MAFV;AAGA,IAAA,iBAAiB,EAAC,QAHlB;AAIA,IAAA,mBAAmB,EAAC,OAJpB;AAKA,IAAA,KAAK,EAAED,MAAM,CAACK,KALd;AAMA,IAAA,UAAU,EAAE;AACVC,MAAAA,GAAG,EAAG,GAAEN,MAAM,CAACM,GAAI;AADT,KANZ;AASA,IAAA,QAAQ,EAAC,aATT;AAUA,IAAA,aAAa,EAAC,OAVd;AAWA,IAAA,OAAO,EAAE,CAXT;AAYA,IAAA,kBAAkB,EAAC,QAZnB;AAaA,IAAA,OAAO,EAAE,IAbT;AAcA,IAAA,OAAO,EAAE,CAAC,GAdV;AAeA,IAAA,OAAO,EAAE,EAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAmBE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAE,KAAtB;AAA6B,IAAA,OAAO,EAAEJ,UAAtC;AAAkD,IAAA,KAAK,EAAED,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD,CA1BD;;AA4BA,eAAeF,WAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  ViewImages\n} from \"../../StyledComponents/productsItems\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [width, height] = useWindowDimension();\n\n  return (\n    <Fragment>\n      <ViewImages size='2' displayWidth={width} displayHeight={height} state={state} s>\n        <Gallery \n        rowWidth=\"100%\"\n        rowHeight=\"100%\"\n        markerActiveColor=\"orange\"\n        markerInactiveColor=\"white\"\n        items={images.paths}\n        childProps={{\n          alt: `${images.alt}`,\n        }}\n        navColor=\"transparent\"\n        navInnerColor=\"white\"\n        navSize={4}\n        navInnerHoverColor=\"orange\"\n        withNav={true}\n        navPosX={-100}\n        navPosY={50}/>\n      </ViewImages>\n      <Backdrop forElement={false} onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n\nexport default ImagesModal;"]},"metadata":{},"sourceType":"module"}