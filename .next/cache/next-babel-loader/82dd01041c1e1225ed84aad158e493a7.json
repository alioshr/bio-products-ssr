{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport { Wrapper, List, MenuItem, Background } from \"../../StyledComponents/dropdownItems\";\n\nvar NavItem = function NavItem(_ref) {\n  var path = _ref.path,\n      label = _ref.label,\n      mouseEntered = _ref.mouseEntered,\n      mouseLeft = _ref.mouseLeft;\n  return __jsx(MenuItem, {\n    onMouseLeave: mouseLeft,\n    onMouseEnter: mouseEntered,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: path,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\n_c = NavItem;\n\nvar ToolbarNav = function ToolbarNav(_ref2) {\n  _s();\n\n  var subItems = _ref2.subItems,\n      cleanupResult = _ref2.cleanupResult;\n\n  var _useState = useState(false),\n      allowBackground = _useState[0],\n      setAllowBackground = _useState[1];\n\n  var _useState2 = useState(false),\n      backgroundToggledLink = _useState2[0],\n      setBackgroundToggledLink = _useState2[1];\n\n  console.log(allowBackground);\n  useEffect(function () {\n    //this piece of state is to avoid the background appearance while the menu opens\n    setTimeout(function () {\n      setAllowBackground(true);\n    }, [550]);\n    return function () {\n      return setAllowBackground(false);\n    }; //cleanUp on unmount\n  }, []);\n\n  var navItemMouseEnter = function navItemMouseEnter(path) {\n    setBackgroundToggledLink(path);\n  };\n\n  var navItemMouseLeave = function navItemMouseLeave() {\n    setBackgroundToggledLink(false);\n  };\n\n  var navItems = subItems.map(function (item) {\n    return __jsx(React.Fragment, {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, __jsx(NavItem, {\n      path: item.path,\n      label: item.label,\n      mouseEntered: function mouseEntered() {\n        return navItemMouseEnter(item.background);\n      },\n      mouseLeft: navItemMouseLeave,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), __jsx(Background, {\n      showBackground: backgroundToggledLink === item.background,\n      backgroundImage: allowBackground && item.background,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }));\n  });\n  return navItems;\n};\n\n_s(ToolbarNav, \"F12Hel/1UT4nAhzKIMk+Dy3O7hw=\");\n\n_c2 = ToolbarNav;\n\nvar Dropdown = function Dropdown(_ref3) {\n  _s2();\n\n  var dropDownTitle = _ref3.dropDownTitle,\n      subCategoryHandler = _ref3.subCategoryHandler,\n      useOnToolbar = _ref3.useOnToolbar,\n      dropDownTogglerHandler = _ref3.dropDownTogglerHandler,\n      showDropDown = _ref3.showDropDown,\n      subItems = _ref3.subItems;\n\n  var _useState3 = useState(0),\n      scrollY = _useState3[0],\n      setScrollY = _useState3[1];\n\n  useScrollPosition(function (_ref4) {\n    var currPos = _ref4.currPos;\n    setScrollY(currPos.y);\n  }, [showDropDown], false, false, 0); //this is to avoid top scrolling when entering/leaving the dropdown\n\n  useEffect(function () {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = \"\".concat(scrollY, \"px\");\n    }\n  }, [showDropDown]);\n  var navItemsMemoized = useMemo(function () {\n    return __jsx(ToolbarNav, {\n      subItems: subItems,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 42\n      }\n    });\n  }, [showDropDown]);\n  return __jsx(Transition, {\n    \"in\": showDropDown,\n    timeout: 500,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, function (state) {\n    return __jsx(Wrapper, {\n      state: state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, navItemsMemoized));\n  });\n};\n\n_s2(Dropdown, \"JYm2GzpTsDUkxuSaszrQnioE5/w=\", false, function () {\n  return [useScrollPosition];\n});\n\n_c3 = Dropdown;\nexport default Dropdown;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NavItem\");\n$RefreshReg$(_c2, \"ToolbarNav\");\n$RefreshReg$(_c3, \"Dropdown\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js"],"names":["React","useState","useEffect","useMemo","useScrollPosition","Transition","FontAwesomeIcon","faChevronDown","Link","Wrapper","List","MenuItem","Background","NavItem","path","label","mouseEntered","mouseLeft","ToolbarNav","subItems","cleanupResult","allowBackground","setAllowBackground","backgroundToggledLink","setBackgroundToggledLink","console","log","setTimeout","navItemMouseEnter","navItemMouseLeave","navItems","map","item","id","background","Dropdown","dropDownTitle","subCategoryHandler","useOnToolbar","dropDownTogglerHandler","showDropDown","scrollY","setScrollY","currPos","y","document","body","style","position","top","window","scrollTo","navItemsMemoized","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport {\n  Wrapper,\n  List,\n  MenuItem,\n  Background,\n} from \"../../StyledComponents/dropdownItems\";\n\nconst NavItem = ({ path, label, mouseEntered, mouseLeft }) => {\n  return (\n    <MenuItem onMouseLeave={mouseLeft} onMouseEnter={mouseEntered}>\n      <Link href={path}>\n        <a>{label}</a>\n      </Link>\n    </MenuItem>\n  );\n};\n\nconst ToolbarNav = ({ subItems, cleanupResult }) => {\n  const [allowBackground, setAllowBackground] = useState(false);\n  const [backgroundToggledLink, setBackgroundToggledLink] = useState(false);\n  console.log(allowBackground)\n  useEffect(() => {\n    //this piece of state is to avoid the background appearance while the menu opens\n    setTimeout(() => {\n      setAllowBackground(true);\n    }, [550]);\n    return () => setAllowBackground(false) //cleanUp on unmount\n  }, []);\n\n  const navItemMouseEnter = (path) => {\n    setBackgroundToggledLink(path);\n  };\n\n  const navItemMouseLeave = () => {\n    setBackgroundToggledLink(false);\n  };\n\n  const navItems = subItems.map((item) => (\n    <React.Fragment key={item.id}>\n      <NavItem\n        path={item.path}\n        label={item.label}\n        mouseEntered={() => navItemMouseEnter(item.background)}\n        mouseLeft={navItemMouseLeave}\n      />\n      <Background\n        showBackground={backgroundToggledLink === item.background}\n        backgroundImage={allowBackground && item.background}\n      />\n    </React.Fragment>\n  ));\n  return navItems;\n};\n\nconst Dropdown = ({\n  dropDownTitle,\n  subCategoryHandler,\n  useOnToolbar,\n  dropDownTogglerHandler,\n  showDropDown,\n  subItems,\n}) => {\n  const [scrollY, setScrollY] = useState(0);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      setScrollY(currPos.y);\n    },\n    [showDropDown],\n    false,\n    false,\n    0\n  );\n  //this is to avoid top scrolling when entering/leaving the dropdown\n  useEffect(() => {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = `${scrollY}px`;\n    }\n  }, [showDropDown]);\n  const navItemsMemoized = useMemo(() => <ToolbarNav  subItems={subItems} />, [showDropDown])\n  return (\n    <Transition in={showDropDown} timeout={500} mountOnEnter unmountOnExit>\n      {(state) => (\n        <Wrapper state={state}>\n          <List>\n            {navItemsMemoized}\n          </List>\n        </Wrapper>\n      )}\n    </Transition>\n  );\n};\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}