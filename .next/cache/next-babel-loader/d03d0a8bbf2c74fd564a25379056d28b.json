{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actions from \"../actions/productsActions\";\nimport { setState } from \"../../Utilities/utilities\";\nconst initialState = {\n  activeCatalog: \"bioCloths\",\n  activeCategory: \"allSizes\"\n};\n\nconst toggleCatalog = (state, payload) => {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCatalog: payload.catalog,\n    activeCategory: payload.category\n  }));\n};\n\nconst toggleCategory = (state, payload) => {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCategory: payload.category\n  }));\n};\n\nexport const productsReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG:\n      return toggleCatalog(state, payload);\n\n    case actions.TOGGLE_CATEGORY:\n      return toggleCategory(state, payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/store/reducers/productsReducer.js"],"names":["actions","setState","initialState","activeCatalog","activeCategory","toggleCatalog","state","payload","catalog","category","toggleCategory","productsReducer","type","TOGGLE_CATALOG","TOGGLE_CATEGORY"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,WADI;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACxC,SAAON,QAAQ,iCACVK,KADU;AAEbH,IAAAA,aAAa,EAAEI,OAAO,CAACC,OAFV;AAGbJ,IAAAA,cAAc,EAAEG,OAAO,CAACE;AAHX,KAAf;AAKD,CAND;;AAQA,MAAMC,cAAc,GAAG,CAACJ,KAAD,EAAQC,OAAR,KAAoB;AACzC,SAAON,QAAQ,iCAAMK,KAAN;AAAaF,IAAAA,cAAc,EAAEG,OAAO,CAACE;AAArC,KAAf;AACD,CAFD;;AAIA,OAAO,MAAME,eAAe,GAAG,CAACL,KAAK,GAAGJ,YAAT,EAAuBK,OAAvB,KAAmC;AAChE,UAAQA,OAAO,CAACK,IAAhB;AACE,SAAKZ,OAAO,CAACa,cAAb;AACE,aAAOR,aAAa,CAACC,KAAD,EAAQC,OAAR,CAApB;;AACF,SAAKP,OAAO,CAACc,eAAb;AACE,aAAOJ,cAAc,CAACJ,KAAD,EAAQC,OAAR,CAArB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATM","sourcesContent":["import * as actions from \"../actions/productsActions\";\nimport { setState } from \"../../Utilities/utilities\";\n\nconst initialState = {\n  activeCatalog: \"bioCloths\",\n  activeCategory: \"allSizes\",\n  \n};\n\nconst toggleCatalog = (state, payload) => {\n  return setState({\n    ...state,\n    activeCatalog: payload.catalog,\n    activeCategory: payload.category,\n  });\n};\n\nconst toggleCategory = (state, payload) => {\n  return setState({ ...state, activeCategory: payload.category });\n};\n\nexport const productsReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG:\n      return toggleCatalog(state, payload);\n    case actions.TOGGLE_CATEGORY:\n      return toggleCategory(state, payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}