{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport { Nav, List, MenuItem, Background } from \"../../StyledComponents/dropdownItems\";\n\nvar Dropdown = function Dropdown(_ref) {\n  _s();\n\n  var dropDownTitle = _ref.dropDownTitle,\n      subCategoryHandler = _ref.subCategoryHandler,\n      dropDownTogglerHandler = _ref.dropDownTogglerHandler,\n      useOnToolbar = _ref.useOnToolbar,\n      showDropDown = _ref.showDropDown,\n      subItems = _ref.subItems;\n\n  var _useState = useState(0),\n      scrollY = _useState[0],\n      setScrollY = _useState[1];\n\n  useScrollPosition(function (_ref2) {\n    var currPos = _ref2.currPos;\n    setScrollY(currPos.y);\n  }, [showDropDown], false, false, 0); //this is to avoid top scrolling when entering/leaving the dropdown\n\n  useEffect(function () {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = \"\".concat(scrollY, \"px\");\n    }\n  }, [showDropDown]);\n  return __jsx(Transition, {\n    \"in\": showDropDown,\n    timeout: 500,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, function (state) {\n    return __jsx(Nav, {\n      state: state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, useOnToolbar && __jsx(ToolbarNav, {\n      subItems: subItems,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }\n    })));\n  });\n};\n\n_s(Dropdown, \"w0YrMI37twwCUgEUTVkLPlMY9hc=\", false, function () {\n  return [useScrollPosition];\n});\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js"],"names":["React","useState","useEffect","useScrollPosition","Transition","FontAwesomeIcon","faChevronDown","Link","Nav","List","MenuItem","Background","Dropdown","dropDownTitle","subCategoryHandler","dropDownTogglerHandler","useOnToolbar","showDropDown","subItems","scrollY","setScrollY","currPos","y","document","body","style","position","top","window","scrollTo","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,UAJF,QAKO,sCALP;;AASA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAOX;AAAA;;AAAA,MANJC,aAMI,QANJA,aAMI;AAAA,MALJC,kBAKI,QALJA,kBAKI;AAAA,MAJJC,sBAII,QAJJA,sBAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,kBAC0BjB,QAAQ,CAAC,CAAD,CADlC;AAAA,MACGkB,OADH;AAAA,MACYC,UADZ;;AAGJjB,EAAAA,iBAAiB,CACf,iBAAiB;AAAA,QAAdkB,OAAc,SAAdA,OAAc;AACfD,IAAAA,UAAU,CAACC,OAAO,CAACC,CAAT,CAAV;AACD,GAHc,EAIf,CAACL,YAAD,CAJe,EAKf,KALe,EAMf,KANe,EAOf,CAPe,CAAjB,CAHI,CAYJ;;AACAf,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,EAA/B;AACAH,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,GAApB,GAA0B,EAA1B;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBV,OAAhB,EAAyBA,OAAO,GAAG,CAAC,CAApC;;AACA,QAAIF,YAAJ,EAAkB;AAChBM,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,OAA/B;AACAH,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBE,GAApB,aAA6BR,OAA7B;AACD;AACF,GARQ,EAQN,CAACF,YAAD,CARM,CAAT;AAUA,SACE,MAAC,UAAD;AAAY,UAAIA,YAAhB;AAA8B,IAAA,OAAO,EAAE,GAAvC;AAA4C,IAAA,YAAY,MAAxD;AAAyD,IAAA,aAAa,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACa,KAAD;AAAA,WACC,MAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCd,YAAY,IAAI,MAAC,UAAD;AAAY,MAAA,QAAQ,EAAEE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjB,CADF,CADD;AAAA,GADH,CADF;AAWD,CAzCD;;GAAMN,Q;UAUJT,iB;;;KAVIS,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport {\n  Nav,\n  List,\n  MenuItem,\n  Background,\n} from \"../../StyledComponents/dropdownItems\";\n\n\n\nconst Dropdown = ({\n  dropDownTitle,\n  subCategoryHandler,\n  dropDownTogglerHandler,\n  useOnToolbar,\n  showDropDown,\n  subItems,\n}) => {\n  const [scrollY, setScrollY] = useState(0);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      setScrollY(currPos.y);\n    },\n    [showDropDown],\n    false,\n    false,\n    0\n  );\n  //this is to avoid top scrolling when entering/leaving the dropdown\n  useEffect(() => {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = `${scrollY}px`;\n    }\n  }, [showDropDown]);\n\n  return (\n    <Transition in={showDropDown} timeout={500} mountOnEnter unmountOnExit>\n      {(state) => (\n        <Nav state={state}>\n          <List>\n          {useOnToolbar && <ToolbarNav subItems={subItems} />}\n          </List>\n        </Nav>\n      )}\n    </Transition>\n  );\n};\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}