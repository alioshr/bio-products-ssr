{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport { Wrapper, List, MenuItem, Background } from \"../../StyledComponents/dropdownItems\";\n\nconst NavItem = ({\n  path,\n  label,\n  mouseEntered,\n  mouseLeft\n}) => {\n  return __jsx(MenuItem, {\n    onMouseLeave: mouseLeft,\n    onMouseEnter: mouseEntered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\nconst Dropdown = ({\n  dropDownTitle,\n  subCategoryHandler,\n  useOnToolbar,\n  dropDownTogglerHandler,\n  showDropDown,\n  subItems\n}) => {\n  const {\n    0: backgroundImage,\n    1: setBackgroundImage\n  } = useState(false);\n  const {\n    0: scrollY,\n    1: setScrollY\n  } = useState(0);\n  useScrollPosition(({\n    currPos\n  }) => {\n    setScrollY(currPos.y);\n  }, [showDropDown], false, false, 0); //this is to avoid top scrolling when entering/leaving the dropdown\n\n  useEffect(() => {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = `${scrollY}px`;\n    }\n  }, [showDropDown]);\n\n  const navItemMouseEnter = path => {\n    setBackgroundImage(path);\n  };\n\n  const navItemMouseLeave = () => {\n    setBackgroundImage(false);\n  };\n\n  const navItems = subItems.map(item => __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(NavItem, {\n    key: item.id,\n    path: item.path,\n    label: item.label,\n    mouseEntered: () => navItemMouseEnter(item.background),\n    mouseLeft: navItemMouseLeave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), __jsx(Background, {\n    withBackground: backgroundImage === item.background,\n    backgroundImage: item.background,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })));\n  return __jsx(Wrapper, {\n    withBackground: backgroundImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, navItems));\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/UI/Dropdown/Dropdown.js"],"names":["React","Fragment","useState","useEffect","useScrollPosition","Transition","FontAwesomeIcon","faChevronDown","Link","Wrapper","List","MenuItem","Background","NavItem","path","label","mouseEntered","mouseLeft","Dropdown","dropDownTitle","subCategoryHandler","useOnToolbar","dropDownTogglerHandler","showDropDown","subItems","backgroundImage","setBackgroundImage","scrollY","setScrollY","currPos","y","document","body","style","position","top","window","scrollTo","navItemMouseEnter","navItemMouseLeave","navItems","map","item","id","background"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\nimport { Transition } from \"react-transition-group\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport Link from \"next/link\";\nimport {\n  Wrapper,\n  List,\n  MenuItem,\n  Background,\n} from \"../../StyledComponents/dropdownItems\";\n\nconst NavItem = ({ path, label, mouseEntered, mouseLeft }) => {\n  return (\n    <MenuItem onMouseLeave={mouseLeft} onMouseEnter={mouseEntered}>\n      <Link href={path}>\n        <a>{label}</a>\n      </Link>\n    </MenuItem>\n  );\n};\n\nconst Dropdown = ({\n  dropDownTitle,\n  subCategoryHandler,\n  useOnToolbar,\n  dropDownTogglerHandler,\n  showDropDown,\n  subItems,\n}) => {\n  const [backgroundImage, setBackgroundImage] = useState(false);\n  const [scrollY, setScrollY] = useState(0);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      setScrollY(currPos.y);\n    },\n    [showDropDown],\n    false,\n    false,\n    0\n  );\n  //this is to avoid top scrolling when entering/leaving the dropdown\n  useEffect(() => {\n    document.body.style.position = \"\";\n    document.body.style.top = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n    if (showDropDown) {\n      document.body.style.position = \"fixed\";\n      document.body.style.top = `${scrollY}px`;\n    }\n  }, [showDropDown]);\n\n  const navItemMouseEnter = (path) => {\n    setBackgroundImage(path);\n  };\n\n  const navItemMouseLeave = () => {\n    setBackgroundImage(false);\n  };\n\n  const navItems = subItems.map((item) => (\n    <Fragment>\n      <NavItem\n        key={item.id}\n        path={item.path}\n        label={item.label}\n        mouseEntered={() => navItemMouseEnter(item.background)}\n        mouseLeft={navItemMouseLeave}\n      />\n      <Background\n        withBackground={backgroundImage === item.background}\n        backgroundImage={item.background}\n      />\n    </Fragment>\n  ));\n\n  return (\n    <Wrapper withBackground={backgroundImage}>\n      <List>{navItems}</List>\n    </Wrapper>\n  );\n};\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}