{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers/index';\nvar store;\n\nfunction initStore(initialState) {\n  return createStore(reducers, initialState, composeWithDevTools(applyMiddleware(thunk)));\n}\n\nvar initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState);\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState));\n    store = undefined;\n    if (false) return _store;\n    if (!store) store = _store;\n    return _store;\n  }\n};\n\nexport var useStore = function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n};\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/store/store.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","thunk","reducers","store","initStore","initialState","initializeStore","preloadedState","_store","getState","undefined","useStore"],"mappings":";;;;;;;;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,IAAIC,KAAJ;;AAEA,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC7B,SAAOP,WAAW,CACdI,QADc,EAEdG,YAFc,EAGdL,mBAAmB,CAACD,eAAe,CAACE,KAAD,CAAhB,CAHL,CAAlB;AAKH;;AAED,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,cAAc,EAAI;AAAA;;AACtC,MAAIC,MAAM,cAAGL,KAAH,6CAAYC,SAAS,CAACG,cAAD,CAA/B;;AAEA,MAAGA,cAAc,IAAIJ,KAArB,EAA4B;AACxBK,IAAAA,MAAM,GAAGJ,SAAS,iCACZD,KAAK,CAACM,QAAN,EADY,GAEZF,cAFY,EAAlB;AAKAJ,IAAAA,KAAK,GAAGO,SAAR;AAEA,eAAkC,OAAOF,MAAP;AAElC,QAAI,CAACL,KAAL,EAAYA,KAAK,GAAGK,MAAR;AAElB,WAAOA,MAAP;AACG;AACJ,CAjBD;;AAmBA,OAAO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAN,YAAY,EAAI;AAAA;;AACpC,MAAMF,KAAK,GAAGN,OAAO,CAAC;AAAA,WAAMS,eAAe,CAACD,YAAD,CAArB;AAAA,GAAD,EAAsC,CAACA,YAAD,CAAtC,CAArB;AACA,SAAOF,KAAP;AACH,CAHM;;GAAMQ,Q","sourcesContent":["import {useMemo} from 'react'\nimport {createStore, applyMiddleware} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension' \nimport thunk from 'redux-thunk'\nimport reducers from './reducers/index';\n\nlet store;\n\nfunction initStore(initialState) {\n    return createStore(\n        reducers,\n        initialState,\n        composeWithDevTools(applyMiddleware(thunk))\n    )\n}\n\nconst initializeStore = preloadedState => {\n    let _store = store ?? initStore(preloadedState)\n\n    if(preloadedState && store) {\n        _store = initStore({\n           ...store.getState(),\n           ...preloadedState,\n        })\n\n        store = undefined\n\n        if(typeof window === 'undefined') return _store\n\n        if (!store) store = _store\n\n  return _store\n    } \n}\n\nexport const useStore = initialState => {\n    const store = useMemo(() => initializeStore(initialState), [initialState])\n    return store;\n}\n"]},"metadata":{},"sourceType":"module"}