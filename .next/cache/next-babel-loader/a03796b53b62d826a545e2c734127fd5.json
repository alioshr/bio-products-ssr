{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/Products.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, createRef, Fragment } from \"react\";\nimport { ProductsWrapper, Category, CategoryTitle, CategoryWrapper, Title, Panel, Product, Image, Name, Span, Hr, Price, Icons, IconInner, IconSpan, StockAlert, Off, PriceSpan, ViewImages, ImagesWrapper, ImagesMarker, ImagesMarkerWrapper, ImageArrow, ImageInnerWrapper } from \"../../StyledComponents/productsItems\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useProductsOverview, useCatalogCategories, useToggleCategory } from \"../../store/actions/actionsIndex\";\nimport { useClientWindow } from \"../../Hooks/useClientWindow\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingBag, faPlusCircle, faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transition } from \"react-transition-group\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport Link from 'next/link';\n\nconst Products = ({}) => {\n  const {\n    0: navProducts,\n    1: showNavProducts\n  } = useState(false);\n  const store = useSelector(state => state.products);\n  const dispatch = useDispatch();\n  const productsOverview = dispatch(useProductsOverview());\n  const activeCatalogCategories = dispatch(useCatalogCategories());\n\n  const navProductsToggleHandler = () => showNavProducts(state => !state);\n\n  const toggleCategoryHandler = id => dispatch(useToggleCategory(id));\n\n  const {\n    0: activeProducts,\n    1: setActiveProducts\n  } = useState(null);\n  useEffect(() => {\n    setActiveProducts(store.catalog[store.activeCatalog][store.activeCategory]);\n  }, [store.activeCategory, store.activeCatalog]);\n  return __jsx(ProductsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Nossos Produtos\"), __jsx(Dropdown, {\n    onProducts: true,\n    dropDownTitle: store.overview[store.activeCatalog].label,\n    showDropDown: navProducts,\n    dropDownTogglerHandler: navProductsToggleHandler,\n    subItems: productsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(Categories, {\n    active: store.activeCategory,\n    categories: activeCatalogCategories,\n    toggleCategory: toggleCategoryHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(ProductPanel, {\n    products: activeProducts,\n    activeCategory: store.activeCategory,\n    activeCatalog: store.activeCatalog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Products;\n\nconst Categories = ({\n  categories,\n  toggleCategory,\n  active\n}) => {\n  const catLength = categories.length;\n  const [elRefs, setElRefs] = React.useState([]);\n  const {\n    0: fitDevice,\n    1: setFitDevice\n  } = useState(null);\n  const window = useClientWindow();\n  useEffect(() => {\n    setElRefs(elRefs => Array(catLength).fill().map((_, i) => elRefs[i] || /*#__PURE__*/createRef()));\n  }, [categories]);\n  useEffect(() => {\n    if (elRefs.length > 0 && elRefs[0].current !== null) {\n      const margin = window.innerWidth < 640 ? 8 : 32; //hardcoded the margins\n\n      setFitDevice(elRefs.map(el => el.current.offsetWidth).reduce((a, b, index) => a + b + margin * index) <= window.innerWidth);\n    }\n  }, [elRefs]);\n  const catTitles = categories.map((category, index) => __jsx(Category, {\n    ref: elRefs[index],\n    key: category.id,\n    onClick: () => toggleCategory(category.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(CategoryTitle, {\n    active: category.id === active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, category.label)));\n  return __jsx(CategoryWrapper, {\n    fitDisplay: fitDevice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, catTitles);\n}; //get state and map it from firebase\n\n\nconst ProductPanel = ({\n  products,\n  activeCatalog,\n  activeCategory\n}) => {\n  const {\n    0: showImagesModal,\n    1: setShowImagesModal\n  } = useState(false);\n  const {\n    0: activeImages,\n    1: setActiveImages\n  } = useState();\n\n  const imagesModalHandler = images => {\n    setActiveImages(images);\n    setShowImagesModal(true);\n  };\n\n  const prod = [];\n\n  for (let key in products) {\n    prod.push(_objectSpread(_objectSpread({\n      id: key\n    }, products[key]), {}, {\n      images: _objectSpread(_objectSpread({}, products[key].images), {}, {\n        paths: Object.values(products[key].images.paths)\n      })\n    }));\n  }\n\n  const prods = prod.map(p => __jsx(Product, {\n    key: p.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(StockCTA, {\n    stock: p.stock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), __jsx(OffPrice, {\n    off: p.off,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }), __jsx(Image, {\n    onClick: () => imagesModalHandler(p.images),\n    src: p.images.paths[0],\n    alt: p.images.alt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), __jsx(Name, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, p.name), __jsx(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"Estoque: \", p.stock, \" unidades\"), __jsx(Hr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), __jsx(Prices, {\n    price: p.price,\n    off: p.off,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }), __jsx(IconPanel, {\n    path: `${activeCatalog}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  })));\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, __jsx(Transition, {\n    in: showImagesModal,\n    timeout: 400,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, state => __jsx(ImagesModal, {\n    images: activeImages,\n    closeModal: () => setShowImagesModal(false),\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), __jsx(Panel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, prods));\n};\n\nconst IconPanel = ({\n  path\n}) => __jsx(Icons, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 3\n  }\n}, __jsx(Link, {\n  href: `/product/${encodeURIComponent(path)}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }\n}, __jsx(IconInner, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }\n}, __jsx(FontAwesomeIcon, {\n  icon: faPlusCircle,\n  size: \"lg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 7\n  }\n}), __jsx(IconSpan, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 7\n  }\n}, \"Info\"))), __jsx(FontAwesomeIcon, {\n  icon: faShoppingBag,\n  size: \"2x\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }\n}));\n\nconst StockCTA = ({\n  stock\n}) => __jsx(StockAlert, {\n  stock: stock,\n  t: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 3\n  }\n}, \"\\xDAltimas Unidades!\");\n\nconst OffPrice = ({\n  off\n}) => __jsx(Off, {\n  off: off,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 31\n  }\n}, off, \"% OFF!\");\n\nconst Prices = ({\n  price,\n  off\n}) => {\n  let value = __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"10 BRL\");\n\n  if (off) {\n    const offPrice = (price - price * off / 100).toFixed(2);\n    value = __jsx(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 7\n      }\n    }, __jsx(PriceSpan, {\n      off: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }, price, \" BRL\"), __jsx(PriceSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, offPrice, \" BRL\"));\n  }\n\n  return __jsx(Price, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 10\n    }\n  }, value, \" / unid\");\n};\n\nconst ImagesModal = ({\n  images,\n  state,\n  closeModal\n}) => {\n  const {\n    0: activePic,\n    1: setActivePic\n  } = useState(0);\n  const [width, height] = useWindowDimension();\n  const imgs = images.paths.map((img, i) => __jsx(ImageInnerWrapper, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    displayWidth: width,\n    displayHeight: height,\n    id: img,\n    src: img,\n    alt: images.alt,\n    modal: true,\n    slide: activePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  })));\n  const markers = images.paths.map((a, i) => __jsx(ImagesMarker, {\n    onClick: () => setActivePic(i),\n    active: i === activePic,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }));\n\n  const swapPicturesHandler = direction => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic(state => state + 1);\n    }\n\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic(state => state - 1);\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, __jsx(ImagesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, imgs), __jsx(ImagesMarkerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, markers), __jsx(ImageArrow, {\n    onClick: () => swapPicturesHandler(\"left\"),\n    position: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    size: \"4x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), __jsx(ImageArrow, {\n    onClick: () => swapPicturesHandler(\"right\"),\n    position: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronRight,\n    size: \"4x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }))), __jsx(Backdrop, {\n    onClick: closeModal,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/Products.js"],"names":["React","useState","useEffect","createRef","Fragment","ProductsWrapper","Category","CategoryTitle","CategoryWrapper","Title","Panel","Product","Image","Name","Span","Hr","Price","Icons","IconInner","IconSpan","StockAlert","Off","PriceSpan","ViewImages","ImagesWrapper","ImagesMarker","ImagesMarkerWrapper","ImageArrow","ImageInnerWrapper","Dropdown","useSelector","useDispatch","useProductsOverview","useCatalogCategories","useToggleCategory","useClientWindow","FontAwesomeIcon","faShoppingBag","faPlusCircle","faChevronRight","faChevronLeft","Transition","Backdrop","useWindowDimension","Link","Products","navProducts","showNavProducts","store","state","products","dispatch","productsOverview","activeCatalogCategories","navProductsToggleHandler","toggleCategoryHandler","id","activeProducts","setActiveProducts","catalog","activeCatalog","activeCategory","overview","label","Categories","categories","toggleCategory","active","catLength","length","elRefs","setElRefs","fitDevice","setFitDevice","window","Array","fill","map","_","i","current","margin","innerWidth","el","offsetWidth","reduce","a","b","index","catTitles","category","ProductPanel","showImagesModal","setShowImagesModal","activeImages","setActiveImages","imagesModalHandler","images","prod","key","push","paths","Object","values","prods","p","stock","off","alt","name","price","IconPanel","path","encodeURIComponent","StockCTA","OffPrice","Prices","value","offPrice","toFixed","ImagesModal","closeModal","activePic","setActivePic","width","height","imgs","img","markers","swapPicturesHandler","direction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef, Fragment } from \"react\";\nimport {\n  ProductsWrapper,\n  Category,\n  CategoryTitle,\n  CategoryWrapper,\n  Title,\n  Panel,\n  Product,\n  Image,\n  Name,\n  Span,\n  Hr,\n  Price,\n  Icons,\n  IconInner,\n  IconSpan,\n  StockAlert,\n  Off,\n  PriceSpan,\n  ViewImages,\n  ImagesWrapper,\n  ImagesMarker,\n  ImagesMarkerWrapper,\n  ImageArrow,\n  ImageInnerWrapper,\n} from \"../../StyledComponents/productsItems\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  useProductsOverview,\n  useCatalogCategories,\n  useToggleCategory,\n} from \"../../store/actions/actionsIndex\";\nimport { useClientWindow } from \"../../Hooks/useClientWindow\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShoppingBag,\n  faPlusCircle,\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Transition } from \"react-transition-group\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport Link from 'next/link'\n\nconst Products = ({}) => {\n  const [navProducts, showNavProducts] = useState(false);\n  const store = useSelector((state) => state.products);\n  const dispatch = useDispatch();\n  const productsOverview = dispatch(useProductsOverview());\n  const activeCatalogCategories = dispatch(useCatalogCategories());\n\n  const navProductsToggleHandler = () => showNavProducts((state) => !state);\n  const toggleCategoryHandler = (id) => dispatch(useToggleCategory(id));\n\n  const [activeProducts, setActiveProducts] = useState(null);\n\n  useEffect(() => {\n    setActiveProducts(store.catalog[store.activeCatalog][store.activeCategory]);\n  }, [store.activeCategory, store.activeCatalog]);  \n\n  return (\n    <ProductsWrapper>\n      <Title>Nossos Produtos</Title>\n      <Dropdown\n        onProducts\n        dropDownTitle={store.overview[store.activeCatalog].label}\n        showDropDown={navProducts}\n        dropDownTogglerHandler={navProductsToggleHandler}\n        subItems={productsOverview}\n      />\n      <Categories\n        active={store.activeCategory}\n        categories={activeCatalogCategories}\n        toggleCategory={toggleCategoryHandler}\n      />\n      <ProductPanel products={activeProducts} activeCategory={store.activeCategory} activeCatalog={store.activeCatalog}/>\n    </ProductsWrapper>\n  );\n};\nexport default Products;\n\nconst Categories = ({ categories, toggleCategory, active }) => {\n  const catLength = categories.length;\n  const [elRefs, setElRefs] = React.useState([]);\n  const [fitDevice, setFitDevice] = useState(null);\n  const window = useClientWindow();\n\n  useEffect(() => {\n    setElRefs((elRefs) =>\n      Array(catLength)\n        .fill()\n        .map((_, i) => elRefs[i] || createRef())\n    );\n  }, [categories]);\n\n  useEffect(() => {\n    if (elRefs.length > 0 && elRefs[0].current !== null) {\n      const margin = window.innerWidth < 640 ? 8 : 32; //hardcoded the margins\n      setFitDevice(\n        elRefs\n          .map((el) => el.current.offsetWidth)\n          .reduce((a, b, index) => a + b + margin * index) <= window.innerWidth\n      );\n    }\n  }, [elRefs]);\n\n  const catTitles = categories.map((category, index) => (\n    <Category\n      ref={elRefs[index]}\n      key={category.id}\n      onClick={() => toggleCategory(category.id)}\n    >\n      <CategoryTitle active={category.id === active}>\n        {category.label}\n      </CategoryTitle>\n    </Category>\n  ));\n  return <CategoryWrapper fitDisplay={fitDevice}>{catTitles}</CategoryWrapper>;\n};\n\n//get state and map it from firebase\nconst ProductPanel = ({ products, activeCatalog, activeCategory }) => {\n  const [showImagesModal, setShowImagesModal] = useState(false);\n  const [activeImages, setActiveImages] = useState();\n\n  const imagesModalHandler = (images) => {\n    setActiveImages(images);\n    setShowImagesModal(true);\n  };\n  const prod = [];\n  for (let key in products) {\n    prod.push({\n      id: key,\n      ...products[key],\n      images: {\n        ...products[key].images,\n        paths: Object.values(products[key].images.paths),\n      },\n    });\n  }\n  \n  const prods = prod.map((p) => (\n    <Product key={p.id}>\n      <StockCTA stock={p.stock} />\n      <OffPrice off={p.off} />\n      <Image\n        onClick={() => imagesModalHandler(p.images)}\n        src={p.images.paths[0]}\n        alt={p.images.alt}\n      />\n      <Name>{p.name}</Name>\n      <Span>Estoque: {p.stock} unidades</Span>\n      <Hr />\n      <Prices price={p.price} off={p.off} />\n      <IconPanel path={`${activeCatalog}`}/>\n    </Product>\n  ));\n  return (\n    <Fragment>\n      <Transition in={showImagesModal} timeout={400} mountOnEnter unmountOnExit>\n        {(state) => (\n          <ImagesModal\n            images={activeImages}\n            closeModal={() => setShowImagesModal(false)}\n            state={state}\n          />\n        )}\n      </Transition>\n      <Panel>{prods}</Panel>\n    </Fragment>\n  );\n};\n\nconst IconPanel = ({path}) => (\n  <Icons>\n    <Link href={`/product/${encodeURIComponent(path)}`}>\n    <IconInner>\n      <FontAwesomeIcon icon={faPlusCircle} size=\"lg\" />\n      <IconSpan>Info</IconSpan>\n    </IconInner>\n    </Link>\n    <FontAwesomeIcon icon={faShoppingBag} size=\"2x\" />\n  </Icons>\n);\n\nconst StockCTA = ({ stock }) => (\n  <StockAlert stock={stock} t>\n    Últimas Unidades!\n  </StockAlert>\n);\n\nconst OffPrice = ({ off }) => <Off off={off}>{off}% OFF!</Off>;\n\nconst Prices = ({ price, off }) => {\n  let value = <strong>10 BRL</strong>;\n  if (off) {\n    const offPrice = (price - (price * off) / 100).toFixed(2);\n    value = (\n      <Fragment>\n        <PriceSpan off>{price} BRL</PriceSpan>\n        <PriceSpan>{offPrice} BRL</PriceSpan>\n      </Fragment>\n    );\n  }\n  return <Price>{value} / unid</Price>;\n};\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [activePic, setActivePic] = useState(0);\n  const [width, height] = useWindowDimension();\n\n  const imgs = images.paths.map((img, i) => (\n    <ImageInnerWrapper key={i}>\n      <Image\n        displayWidth={width}\n        displayHeight={height}\n        id={img}\n        src={img}\n        alt={images.alt}\n        modal\n        slide={activePic}\n      />\n    </ImageInnerWrapper>\n  ));\n\n  const markers = images.paths.map((a, i) => (\n    <ImagesMarker\n      onClick={() => setActivePic(i)}\n      active={i === activePic}\n      key={i}\n    />\n  ));\n\n  const swapPicturesHandler = (direction) => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic((state) => state + 1);\n    }\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic((state) => state - 1);\n    }\n  };\n  return (\n    <Fragment>\n      <ViewImages displayWidth={width} displayHeight={height} state={state} s>\n        <ImagesWrapper>{imgs}</ImagesWrapper>\n        <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n        <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n          <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n        </ImageArrow>\n        <ImageArrow\n          onClick={() => swapPicturesHandler(\"right\")}\n          position=\"right\"\n        >\n          <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n        </ImageArrow>\n      </ViewImages>\n      <Backdrop onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}