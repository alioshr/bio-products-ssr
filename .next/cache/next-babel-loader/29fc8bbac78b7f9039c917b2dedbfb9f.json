{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"./useScrollPosition\";\nexport var useLockBodyScroll = function useLockBodyScroll(_ref) {\n  _s();\n\n  var dispatcher = _ref.dispatcher;\n\n  var _useState = useState(0),\n      scrollY = _useState[0],\n      setScrollY = _useState[1];\n\n  useScrollPosition(function (_ref2) {\n    var currPos = _ref2.currPos;\n    setScrollY(currPos.y);\n  }, [dispatcher], false, false, 0); //this is to avoid top scrolling when entering/leaving the dropdown\n\n  useEffect(function () {\n    var bodyStyle = document.body.style;\n    bodyStyle.position = \"\";\n    bodyStyle.top = \"\";\n    bodyStyle.left = \"\";\n    bodyStyle.right = \"\";\n    window.scrollTo(scrollY, scrollY * -1);\n\n    if (dispatcher) {\n      console.log('dipatcher ran');\n      bodyStyle.position = \"fixed\";\n      bodyStyle.top = \"\".concat(scrollY, \"px\");\n      bodyStyle.left = \"0\";\n      bodyStyle.right = \"0\";\n    }\n  }, [dispatcher]);\n};\n\n_s(useLockBodyScroll, \"w0YrMI37twwCUgEUTVkLPlMY9hc=\", false, function () {\n  return [useScrollPosition];\n});","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Hooks/useLockBodyScroll.js"],"names":["useState","useEffect","useScrollPosition","useLockBodyScroll","dispatcher","scrollY","setScrollY","currPos","y","bodyStyle","document","body","style","position","top","left","right","window","scrollTo","console","log"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAoB;AAAA;;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACrBJ,QAAQ,CAAC,CAAD,CADa;AAAA,MAC5CK,OAD4C;AAAA,MACnCC,UADmC;;AAGnDJ,EAAAA,iBAAiB,CACf,iBAAiB;AAAA,QAAdK,OAAc,SAAdA,OAAc;AACfD,IAAAA,UAAU,CAACC,OAAO,CAACC,CAAT,CAAV;AACD,GAHc,EAIf,CAACJ,UAAD,CAJe,EAKf,KALe,EAMf,KANe,EAOf,CAPe,CAAjB,CAHmD,CAYnD;;AACAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,SAAS,GAAGC,QAAQ,CAACC,IAAT,CAAcC,KAAhC;AACEH,IAAAA,SAAS,CAACI,QAAV,GAAqB,EAArB;AACAJ,IAAAA,SAAS,CAACK,GAAV,GAAgB,EAAhB;AACAL,IAAAA,SAAS,CAACM,IAAV,GAAiB,EAAjB;AACAN,IAAAA,SAAS,CAACO,KAAV,GAAkB,EAAlB;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBb,OAAhB,EAAyBA,OAAO,GAAG,CAAC,CAApC;;AACF,QAAID,UAAJ,EAAgB;AACZe,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACFX,MAAAA,SAAS,CAACI,QAAV,GAAqB,OAArB;AACAJ,MAAAA,SAAS,CAACK,GAAV,aAAmBT,OAAnB;AACAI,MAAAA,SAAS,CAACM,IAAV,GAAiB,GAAjB;AACAN,MAAAA,SAAS,CAACO,KAAV,GAAkB,GAAlB;AACD;AACF,GAdQ,EAcN,CAACZ,UAAD,CAdM,CAAT;AAeD,CA5BM;;GAAMD,iB;UAGXD,iB","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useScrollPosition } from \"./useScrollPosition\";\n\nexport const useLockBodyScroll = ({ dispatcher }) => {\n  const [scrollY, setScrollY] = useState(0);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      setScrollY(currPos.y);\n    },\n    [dispatcher],\n    false,\n    false,\n    0\n  );\n  //this is to avoid top scrolling when entering/leaving the dropdown\n  useEffect(() => {\n    const bodyStyle = document.body.style;\n      bodyStyle.position = \"\";\n      bodyStyle.top = \"\";\n      bodyStyle.left = \"\";\n      bodyStyle.right = \"\";\n      window.scrollTo(scrollY, scrollY * -1);\n    if (dispatcher) {\n        console.log('dipatcher ran')\n      bodyStyle.position = \"fixed\";\n      bodyStyle.top = `${scrollY}px`;\n      bodyStyle.left = \"0\";\n      bodyStyle.right = \"0\";\n    }\n  }, [dispatcher]);\n};\n"]},"metadata":{},"sourceType":"module"}