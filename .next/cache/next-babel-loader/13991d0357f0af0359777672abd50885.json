{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/UI/Swipeable/Swipeable.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nexport const Gallery = ({\n  items,\n  childProps,\n  rowWidth,\n  rowHeight,\n  markerActiveColor,\n  markerInactiveColor,\n  withNav,\n  navColor,\n  navInnerColor,\n  navSize,\n  navInnerHoverColor,\n  navPosX,\n  navPosY\n}) => {\n  //dummy state to force an extra render in order to populate the elRefs\n  const {\n    0: forceRender,\n    1: setForceRender\n  } = useState(false); //activeMarker is necessary as refs do not render as state to track the marker position\n\n  const {\n    0: activeMarker,\n    1: setActiveMarker\n  } = useState(0);\n  const activeBox = useRef(0);\n  const dragStartXRef = useRef(0);\n  const leftRef = useRef(0);\n  const draggedRef = React.useRef(false);\n  const elRefs = useRef([]);\n  const markersRef = useRef();\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onDragEndMouse);\n    window.addEventListener(\"touchend\", onDragEndTouch);\n    return () => {\n      window.removeEventListener(\"mouseup\", onDragEndMouse);\n      window.removeEventListener(\"touchend\", onDragEndTouch);\n    };\n  }, []);\n  useEffect(() => {\n    if (elRefs.current.length !== items.length) {\n      setForceRender(true);\n      elRefs.current = Array(items.length).fill().map((_, i) => elRefs.current[i] || /*#__PURE__*/React.createRef());\n    }\n  }, []); //mouse API\n\n  function onDragStartMouse(e) {\n    onDragStart(e.clientX);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    requestAnimationFrame(updatePosition);\n  }\n\n  function onMouseMove(e) {\n    const left = e.clientX - dragStartXRef.current;\n    if (left < 0 && activeBox.current === 0) leftRef.current = left;\n    if (activeBox.current > 0 && activeBox.current < elRefs.current.length - 1) leftRef.current = left;\n    if (left > 0 && activeBox.current === elRefs.current.length - 1) leftRef.current = left;\n  }\n\n  function onDragEndMouse() {\n    window.removeEventListener(\"mousemove\", onMouseMove);\n    onDragEnd();\n  } //touch API\n\n\n  function onDragStartTouch(e) {\n    const touch = e.targetTouches[0];\n    onDragStart(touch.clientX);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    requestAnimationFrame(updatePosition);\n  }\n\n  function onTouchMove(e) {\n    const touch = e.targetTouches[0];\n    const left = touch.clientX - dragStartXRef.current;\n    if (left < 0 && activeBox.current === 0) leftRef.current = left;\n    if (activeBox.current > 0 && activeBox.current < elRefs.current.length - 1) leftRef.current = left;\n    if (left > 0 && activeBox.current === elRefs.current.length - 1) leftRef.current = left;\n  }\n\n  function onDragEndTouch() {\n    window.removeEventListener(\"touchmove\", onTouchMove);\n    onDragEnd();\n  } //for both APIs below\n  //gives the X position\n\n\n  function onDragStart(clientX) {\n    draggedRef.current = true;\n    dragStartXRef.current = clientX;\n  }\n\n  function updatePosition() {\n    if (draggedRef.current) {\n      requestAnimationFrame(updatePosition);\n    }\n\n    let boxWidth = -elRefs.current[0].current.offsetWidth;\n    elRefs.current.map(el => el.current.style.transform = `translateX(${leftRef.current + boxWidth * activeBox.current}px)`);\n  } //determines what happens at the end of the animation\n\n\n  function onDragEnd() {\n    if (draggedRef.current) {\n      draggedRef.current = false;\n      const boxWidth = -elRefs.current[0].current.offsetWidth;\n\n      if (leftRef.current < boxWidth / 2) {\n        setActiveMarker(state => state + 1);\n        activeBox.current = activeBox.current + 1;\n      }\n\n      if (leftRef.current > boxWidth * -1 / 2) {\n        setActiveMarker(state => state - 1);\n        activeBox.current = activeBox.current - 1;\n      }\n    }\n\n    leftRef.current = 0;\n  }\n\n  const activeBoxHandler = index => {\n    setActiveMarker(index);\n    activeBox.current = index;\n    requestAnimationFrame(updatePosition);\n  };\n\n  const navButtonsLogicHandler = mode => {\n    if (mode === \"add\" && activeBox.current < items.length - 1) {\n      setActiveMarker(state => state + 1);\n      activeBox.current = activeBox.current + 1;\n      requestAnimationFrame(updatePosition);\n    }\n\n    if (mode === \"subtract\" && activeBox.current > 0) {\n      setActiveMarker(state => state - 1);\n      activeBox.current = activeBox.current - 1;\n      requestAnimationFrame(updatePosition);\n    }\n  };\n\n  const boxes = items.map((item, i) => __jsx(Box, _extends({\n    src: item,\n    onDragStart: e => e.preventDefault()\n  }, childProps, {\n    key: i,\n    ref: elRefs.current[i],\n    onMouseDown: onDragStartMouse,\n    onTouchStart: onDragStartTouch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  })));\n  const dottedMarkers = Array(items.length).fill().map((_, i) => {\n    var _markersRef$current;\n\n    return __jsx(Marker, {\n      onClick: () => activeBoxHandler(i),\n      dims: (_markersRef$current = markersRef.current) === null || _markersRef$current === void 0 ? void 0 : _markersRef$current.offsetHeight,\n      active: activeMarker === i,\n      activeColor: markerActiveColor,\n      inactiveColor: markerInactiveColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    });\n  });\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    rowHeight: rowHeight,\n    rowWidth: rowWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, boxes), __jsx(Markers, {\n    ref: markersRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 3\n    }\n  }, dottedMarkers), withNav && __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, __jsx(ChevronLeft, {\n    onClick: () => navButtonsLogicHandler(\"subtract\"),\n    bkgColor: navColor,\n    chevronColor: navInnerColor,\n    chevronHoverColor: navInnerHoverColor,\n    size: navSize,\n    posX: navPosX,\n    posY: navPosY,\n    alignment: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }), __jsx(ChevronRight, {\n    onClick: () => navButtonsLogicHandler(\"add\"),\n    bkgColor: navColor,\n    chevronColor: navInnerColor,\n    chevronHoverColor: navInnerHoverColor,\n    size: navSize,\n    posX: navPosX,\n    posY: navPosY,\n    alignment: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  })));\n};\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Row = styled.div`\n  width: ${({\n  rowWidth\n}) => rowWidth ? rowWidth : \"100%\"};\n  height: ${({\n  rowHeight\n}) => rowHeight ? rowHeight : \"100%\"};\n  background-color: #c4c4c4;\n  display: flex;\n  justify-content: flex-start;\n  overflow: hidden;\n  position: relative;\n`;\nconst Box = styled.img`\n  min-width: 100%;\n  height: 100%;\n  transition: all 400ms ease-out;\n  box-sizing: border-box;\n  object-fit: contain;\n  position: relative;\n`;\nconst Markers = styled.div`\n  width: 100%;\n  height: 5%;\n  position: relative;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  margin: .5rem 0;\n`;\nconst Marker = styled.div`\ncursor: p\n  margin: 0.2rem;\n  border-radius: 50%;\n  ${({\n  dims\n}) => dims && css`\n      height: ${dims}px;\n      width: ${dims}px;\n    `}\n  background-color: ${({\n  inactiveColor\n}) => inactiveColor ? inactiveColor : \"#c4c4c4\"};\n  ${({\n  active\n}) => active && css`\n      background-color: ${({\n  activeColor\n}) => activeColor ? activeColor : \"red\"};\n    `}\n`;\n\nconst navButtonsMixin = (bkgColor = \"black\", chevronColor = \"white\", size = 5, alignment, posX, posY, chevronHoverColor = \"orange\") => css`\n  position: absolute;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: ${bkgColor};\n  width: ${size}rem;\n  height: ${size}rem;\n  ${alignment === \"left\" ? ` left: ${posX}px;` : alignment === \"right\" ? `right: ${posX}px;` : null};\n  top: ${posY ? posY : 50}%;\n  transform: translateY(-${posY ? posY : 50}%);\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 35%;\n    height: 35%;\n    top: 50%;\n    border-left: 5px solid ${chevronColor};\n    border-top: 5px solid ${chevronColor};\n    transition: all 100ms ease-in;\n  }\n\n  &:hover {\n    ::after {\n      border-left: 5px solid ${chevronHoverColor};\n      border-top: 5px solid ${chevronHoverColor};\n    }\n  }\n`;\n\nconst ChevronRight = styled.div`\n  display: none;\n  ${({\n  bkgColor,\n  chevronColor,\n  size,\n  posX,\n  posY,\n  alignment,\n  chevronHoverColor\n}) => navButtonsMixin(bkgColor, chevronColor, size, alignment, posX, posY, chevronHoverColor)}\n  ::after {\n    left: 40%;\n    transform: translate(-50%, -50%) rotateZ(135deg);\n  }\n  @media (min-width: 40rem) and (min-height: 28rem) {\n    display: block;\n  }\n`;\nconst ChevronLeft = styled(ChevronRight)`\n  ::after {\n    left: 60%;\n    transform: translate(-50%, -50%) rotateZ(-45deg);\n  }\n`;","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/UI/Swipeable/Swipeable.js"],"names":["React","useEffect","useRef","useState","styled","css","Gallery","items","childProps","rowWidth","rowHeight","markerActiveColor","markerInactiveColor","withNav","navColor","navInnerColor","navSize","navInnerHoverColor","navPosX","navPosY","forceRender","setForceRender","activeMarker","setActiveMarker","activeBox","dragStartXRef","leftRef","draggedRef","elRefs","markersRef","window","addEventListener","onDragEndMouse","onDragEndTouch","removeEventListener","current","length","Array","fill","map","_","i","createRef","onDragStartMouse","e","onDragStart","clientX","onMouseMove","requestAnimationFrame","updatePosition","left","onDragEnd","onDragStartTouch","touch","targetTouches","onTouchMove","boxWidth","offsetWidth","el","style","transform","state","activeBoxHandler","index","navButtonsLogicHandler","mode","boxes","item","preventDefault","dottedMarkers","offsetHeight","Wrapper","div","Row","Box","img","Markers","Marker","dims","inactiveColor","active","activeColor","navButtonsMixin","bkgColor","chevronColor","size","alignment","posX","posY","chevronHoverColor","ChevronRight","ChevronLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nexport const Gallery = ({\n  items,\n  childProps,\n  rowWidth,\n  rowHeight,\n  markerActiveColor,\n  markerInactiveColor,\n  withNav,\n  navColor,\n  navInnerColor,\n  navSize,\n  navInnerHoverColor,\n  navPosX,\n  navPosY\n}) => {\n  //dummy state to force an extra render in order to populate the elRefs\n  const [forceRender, setForceRender] = useState(false);\n  //activeMarker is necessary as refs do not render as state to track the marker position\n  const [activeMarker, setActiveMarker] = useState(0);\n  const activeBox = useRef(0);\n  const dragStartXRef = useRef(0);\n  const leftRef = useRef(0);\n  const draggedRef = React.useRef(false);\n  const elRefs = useRef([]);\n  const markersRef = useRef();\n\n  useEffect(() => {\n    window.addEventListener(\"mouseup\", onDragEndMouse);\n    window.addEventListener(\"touchend\", onDragEndTouch);\n    return () => {\n      window.removeEventListener(\"mouseup\", onDragEndMouse);\n      window.removeEventListener(\"touchend\", onDragEndTouch);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (elRefs.current.length !== items.length) {\n      setForceRender(true);\n      elRefs.current = Array(items.length)\n        .fill()\n        .map((_, i) => elRefs.current[i] || React.createRef());\n    }\n  }, []);\n\n  //mouse API\n  function onDragStartMouse(e) {\n    onDragStart(e.clientX);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    requestAnimationFrame(updatePosition);\n  }\n\n  function onMouseMove(e) {\n    const left = e.clientX - dragStartXRef.current;\n    if (left < 0 && activeBox.current === 0) leftRef.current = left;\n    if (activeBox.current > 0 && activeBox.current < elRefs.current.length - 1)\n      leftRef.current = left;\n    if (left > 0 && activeBox.current === elRefs.current.length - 1)\n      leftRef.current = left;\n  }\n\n  function onDragEndMouse() {\n    window.removeEventListener(\"mousemove\", onMouseMove);\n    onDragEnd();\n  }\n\n  //touch API\n  function onDragStartTouch(e) {\n    const touch = e.targetTouches[0];\n    onDragStart(touch.clientX);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    requestAnimationFrame(updatePosition);\n  }\n\n  function onTouchMove(e) {\n    const touch = e.targetTouches[0];\n    const left = touch.clientX - dragStartXRef.current;\n    if (left < 0 && activeBox.current === 0) leftRef.current = left;\n    if (activeBox.current > 0 && activeBox.current < elRefs.current.length - 1)\n      leftRef.current = left;\n    if (left > 0 && activeBox.current === elRefs.current.length - 1)\n      leftRef.current = left;\n  }\n\n  function onDragEndTouch() {\n    window.removeEventListener(\"touchmove\", onTouchMove);\n    onDragEnd();\n  }\n\n  //for both APIs below\n  //gives the X position\n  function onDragStart(clientX) {\n    draggedRef.current = true;\n    dragStartXRef.current = clientX;\n  }\n\n  function updatePosition() {\n    if (draggedRef.current) {\n      requestAnimationFrame(updatePosition);\n    }\n    let boxWidth = -elRefs.current[0].current.offsetWidth;\n    elRefs.current.map(\n      (el) =>\n        (el.current.style.transform = `translateX(${\n          leftRef.current + boxWidth * activeBox.current\n        }px)`)\n    );\n  }\n\n  //determines what happens at the end of the animation\n  function onDragEnd() {\n    if (draggedRef.current) {\n      draggedRef.current = false;\n      const boxWidth = -elRefs.current[0].current.offsetWidth;\n      if (leftRef.current < boxWidth / 2) {\n        setActiveMarker((state) => state + 1);\n        activeBox.current = activeBox.current + 1;\n      }\n      if (leftRef.current > (boxWidth * -1) / 2) {\n        setActiveMarker((state) => state - 1);\n        activeBox.current = activeBox.current - 1;\n      }\n    }\n    leftRef.current = 0;\n  }\n\n  const activeBoxHandler = (index) => {\n    setActiveMarker(index);\n    activeBox.current = index;\n    requestAnimationFrame(updatePosition);\n  };\n\n  const navButtonsLogicHandler = (mode) => {\n    if (mode === \"add\" && activeBox.current < items.length - 1) {\n      setActiveMarker((state) => state + 1);\n      activeBox.current = activeBox.current + 1;\n      requestAnimationFrame(updatePosition);\n    }\n\n    if (mode === \"subtract\" && activeBox.current > 0) {\n      setActiveMarker((state) => state - 1);\n      activeBox.current = activeBox.current - 1;\n      requestAnimationFrame(updatePosition);\n    }\n  };\n\n  const boxes = items.map((item, i) => (\n    <Box\n      src={item}\n      onDragStart={(e) => e.preventDefault()}\n      {...childProps}\n      key={i}\n      ref={elRefs.current[i]}\n      onMouseDown={onDragStartMouse}\n      onTouchStart={onDragStartTouch}\n    />\n  ));\n\n  const dottedMarkers = Array(items.length)\n    .fill()\n    .map((_, i) => (\n      <Marker\n        onClick={() => activeBoxHandler(i)}\n        dims={markersRef.current?.offsetHeight}\n        active={activeMarker === i}\n        activeColor={markerActiveColor}\n        inactiveColor={markerInactiveColor}\n      />\n    ));\n  return (\n    <Wrapper>\n      <Row rowHeight={rowHeight} rowWidth={rowWidth}>\n        {boxes}\n      </Row>\n  <Markers ref={markersRef}>{dottedMarkers}</Markers>\n      {withNav && (\n        <React.Fragment>\n          <ChevronLeft\n            onClick={() => navButtonsLogicHandler(\"subtract\")}\n            bkgColor={navColor}\n            chevronColor={navInnerColor}\n            chevronHoverColor={navInnerHoverColor}\n            size={navSize}\n            posX={navPosX}\n            posY={navPosY}\n            alignment=\"left\"\n          />\n          <ChevronRight\n            onClick={() => navButtonsLogicHandler(\"add\")}\n            bkgColor={navColor}\n            chevronColor={navInnerColor}\n            chevronHoverColor={navInnerHoverColor}\n            size={navSize}\n            posX={navPosX}\n            posY={navPosY}\n            alignment=\"right\"\n          />\n        </React.Fragment>\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Row = styled.div`\n  width: ${({ rowWidth }) => (rowWidth ? rowWidth : \"100%\")};\n  height: ${({ rowHeight }) => (rowHeight ? rowHeight : \"100%\")};\n  background-color: #c4c4c4;\n  display: flex;\n  justify-content: flex-start;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst Box = styled.img`\n  min-width: 100%;\n  height: 100%;\n  transition: all 400ms ease-out;\n  box-sizing: border-box;\n  object-fit: contain;\n  position: relative;\n`;\n\nconst Markers = styled.div`\n  width: 100%;\n  height: 5%;\n  position: relative;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  margin: .5rem 0;\n`;\n\nconst Marker = styled.div`\ncursor: p\n  margin: 0.2rem;\n  border-radius: 50%;\n  ${({ dims }) =>\n    dims &&\n    css`\n      height: ${dims}px;\n      width: ${dims}px;\n    `}\n  background-color: ${({ inactiveColor }) =>\n    inactiveColor ? inactiveColor : \"#c4c4c4\"};\n  ${({ active }) =>\n    active &&\n    css`\n      background-color: ${({ activeColor }) =>\n        activeColor ? activeColor : \"red\"};\n    `}\n`;\n\nconst navButtonsMixin = (\n  bkgColor = \"black\",\n  chevronColor = \"white\",\n  size = 5,\n  alignment,\n  posX,\n  posY,\n  chevronHoverColor = \"orange\"\n) => css`\n  position: absolute;\n  border-radius: 50%;\n  cursor: pointer;\n  background-color: ${bkgColor};\n  width: ${size}rem;\n  height: ${size}rem;\n  ${alignment === \"left\"\n    ? ` left: ${posX}px;`\n    : alignment === \"right\"\n    ? `right: ${posX}px;`\n    : null};\n  top: ${posY ? posY : 50}%;\n  transform: translateY(-${posY ? posY : 50}%);\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 35%;\n    height: 35%;\n    top: 50%;\n    border-left: 5px solid ${chevronColor};\n    border-top: 5px solid ${chevronColor};\n    transition: all 100ms ease-in;\n  }\n\n  &:hover {\n    ::after {\n      border-left: 5px solid ${chevronHoverColor};\n      border-top: 5px solid ${chevronHoverColor};\n    }\n  }\n`;\n\nconst ChevronRight = styled.div`\n  display: none;\n  ${({\n    bkgColor,\n    chevronColor,\n    size,\n    posX,\n    posY,\n    alignment,\n    chevronHoverColor,\n  }) =>\n    navButtonsMixin(\n      bkgColor,\n      chevronColor,\n      size,\n      alignment,\n      posX,\n      posY,\n      chevronHoverColor\n    )}\n  ::after {\n    left: 40%;\n    transform: translate(-50%, -50%) rotateZ(135deg);\n  }\n  @media (min-width: 40rem) and (min-height: 28rem) {\n    display: block;\n  }\n`;\n\nconst ChevronLeft = styled(ChevronRight)`\n  ::after {\n    left: 60%;\n    transform: translate(-50%, -50%) rotateZ(-45deg);\n  }\n`;"]},"metadata":{},"sourceType":"module"}