{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/pages/product/[product].js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Wrapper, Banner, BannerImage, Details, Title, Features, Feature, Panel, Add, Remove, Qty, CTA, Purchase } from \"../../StyledComponents/productDetails\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport FeaturesDB from \"../../DB/catalog.json\";\nimport styled from 'styled-components';\nconst Table = styled.div`\nwidth: 100vw;\nheight: 100vh;\ndisplay: grid;\ngrid-template-columns: 40px 1fr 1fr;\ngrid-template-rows: 40px 1fr 1fr;\ngrid-template-areas: \"col col col\"\n                      \"row cel cel\"\n                      \"row cel cel\";\n`;\nconst Cel = styled.div`\n  height: 100%;\n  width: 100%;\n  border: 1px solid black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-area: \n`;\nconst Span = styled.span`\npadding: 2rem;\nfont-weight: bold;\n`;\n\nconst ProductDetails = ({\n  product,\n  category,\n  id\n}) => {\n  const {\n    0: qty,\n    1: setQty\n  } = useState(1);\n  const {\n    0: activeSpec,\n    1: setActiveSpec\n  } = useState(0);\n  const {\n    0: toggledSpec,\n    1: setToggledSpec\n  } = useState(false);\n  const ProdDetails = FeaturesDB.details[product][category][id];\n\n  const qtyHandler = mode => {\n    if (mode === \"remove\" && qty > 1) {\n      setQty(qty => qty - 1);\n    }\n\n    if (mode === \"add\") {\n      setQty(qty => qty + 1);\n    }\n  };\n\n  const featureHandler = index => {\n    index !== activeSpec && setToggledSpec(true);\n    index === activeSpec && setToggledSpec(state => !state);\n    setActiveSpec(index);\n  };\n\n  const info = ['name', 'Gerlain', 'name', 'Aliosh'];\n  const data = info.map(i => __jsx(Cel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Span, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, i)));\n  const feats = [\"Sobre\", \"Como usar\", \"Ingredientes\", \"Reviews\"];\n  const features = feats.map((feature, i) => __jsx(Feature, {\n    index: i,\n    active: i === activeSpec && toggledSpec,\n    inactive: i != activeSpec && toggledSpec,\n    onClick: () => featureHandler(i),\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, feature)));\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, data));\n};\n\nexport default ProductDetails;\nexport async function getServerSideProps(context) {\n  const product = context.query.product;\n  const category = context.query.activeCategory;\n  const id = context.query.id; // const res = await fetch(\n  //   `https://meli-99509.firebaseio.com/catalog/${product}/${category}/${id}.json`\n  // );\n  // const json = await res.json();\n\n  return {\n    props: {\n      product,\n      category,\n      id\n    }\n  };\n}","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/pages/product/[product].js"],"names":["React","useState","Wrapper","Banner","BannerImage","Details","Title","Features","Feature","Panel","Add","Remove","Qty","CTA","Purchase","FontAwesomeIcon","faPlusCircle","faMinusCircle","Backdrop","FeaturesDB","styled","Table","div","Cel","Span","span","ProductDetails","product","category","id","qty","setQty","activeSpec","setActiveSpec","toggledSpec","setToggledSpec","ProdDetails","details","qtyHandler","mode","featureHandler","index","state","info","data","map","i","feats","features","feature","getServerSideProps","context","query","activeCategory","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Wrapper,\n  Banner,\n  BannerImage,\n  Details,\n  Title,\n  Features,\n  Feature,\n  Panel,\n  Add,\n  Remove,\n  Qty,\n  CTA,\n  Purchase,\n} from \"../../StyledComponents/productDetails\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport FeaturesDB from \"../../DB/catalog.json\";\nimport styled from 'styled-components'\n\n\nconst Table = styled.div`\nwidth: 100vw;\nheight: 100vh;\ndisplay: grid;\ngrid-template-columns: 40px 1fr 1fr;\ngrid-template-rows: 40px 1fr 1fr;\ngrid-template-areas: \"col col col\"\n                      \"row cel cel\"\n                      \"row cel cel\";\n`;\n\nconst Cel = styled.div`\n  height: 100%;\n  width: 100%;\n  border: 1px solid black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-area: \n`\n\nconst Span = styled.span`\npadding: 2rem;\nfont-weight: bold;\n`\n\n\nconst ProductDetails = ({ product, category, id }) => {\n  const [qty, setQty] = useState(1);\n  const [activeSpec, setActiveSpec] = useState(0);\n  const [toggledSpec, setToggledSpec] = useState(false);\n\n  const ProdDetails = FeaturesDB.details[product][category][id];\n\n  const qtyHandler = (mode) => {\n    if (mode === \"remove\" && qty > 1) {\n      setQty((qty) => qty - 1);\n    }\n    if (mode === \"add\") {\n      setQty((qty) => qty + 1);\n    }\n  };\n\n  const featureHandler = (index) => {\n    index !== activeSpec && setToggledSpec(true);\n    index === activeSpec && setToggledSpec((state) => !state);\n    setActiveSpec(index);\n  };\n\n  const info = ['name', 'Gerlain', 'name', 'Aliosh'];\n\n  const data = info.map(i => (\n    <Cel>\n      <Span>\n        {i}\n      </Span>\n    </Cel>\n  ))\n\n  const feats = [\"Sobre\", \"Como usar\", \"Ingredientes\", \"Reviews\"];\n  const features = feats.map((feature, i) => (\n    <Feature\n      index={i}\n      active={i === activeSpec && toggledSpec}\n      inactive={i != activeSpec && toggledSpec}\n      onClick={() => featureHandler(i)}\n      key={i}\n    >\n      <span>{feature}</span>\n    </Feature>\n  ));\n\n\n\n  return (\n    <Wrapper>\n\n      <Table>\n        {data}\n      </Table>\n      {/* <Banner>\n        <BannerImage src=\"/DetailsTest/test.jpg\" alt=\"banner logo\" />\n        <Title>Caf√© Black</Title>\n        <Backdrop style={{ zIndex: 1 }} forElement={true} />\n      </Banner>\n      <Details>\n        <Features index={activeSpec} activeFeature={toggledSpec}>{features}</Features>\n        <Panel>\n          <CTA>Compre</CTA>\n          <Purchase>\n            <Remove onClick={() => qtyHandler(\"remove\")}>\n              <FontAwesomeIcon icon={faMinusCircle} />\n            </Remove>\n            <Qty>{qty}</Qty>\n            <Add onClick={() => qtyHandler(\"add\")}>\n              <FontAwesomeIcon icon={faPlusCircle} />\n            </Add>\n          </Purchase>\n        </Panel>\n      </Details> */}\n    </Wrapper>\n  );\n};\n\nexport default ProductDetails;\n\nexport async function getServerSideProps(context) {\n  const product = context.query.product;\n  const category = context.query.activeCategory;\n  const id = context.query.id;\n  // const res = await fetch(\n  //   `https://meli-99509.firebaseio.com/catalog/${product}/${category}/${id}.json`\n  // );\n  // const json = await res.json();\n\n  return {\n    props: {\n      product,\n      category,\n      id,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}