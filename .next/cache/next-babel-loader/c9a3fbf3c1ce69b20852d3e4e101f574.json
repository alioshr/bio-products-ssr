{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport { ImageInnerWrapper, Image, ImagesMarker, ViewImages, ImagesWrapper, ImagesMarkerWrapper, ImageArrow } from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nvar ImagesModal = function ImagesModal(_ref) {\n  _s();\n\n  var images = _ref.images,\n      state = _ref.state,\n      closeModal = _ref.closeModal;\n\n  var _useWindowDimension = useWindowDimension(),\n      _useWindowDimension2 = _slicedToArray(_useWindowDimension, 2),\n      width = _useWindowDimension2[0],\n      height = _useWindowDimension2[1]; // const imgs = images.paths.map((img, i) => (\n  //   <ImageInnerWrapper key={i}>\n  //     <Image\n  //       displayWidth={width}\n  //       displayHeight={height}\n  //       id={img}\n  //       src={img}\n  //       alt={images.alt}\n  //       modal\n  //       slide={activePic}\n  //     />\n  //   </ImageInnerWrapper>\n  // ));\n  // useEffect(() => {\n  //   const length = imgs.length;\n  //   if (elRefs.current.length !== length) {\n  //     elRefs.current = Array(length)\n  //       .fill()\n  //       .map((_, i) => elRefs.current[i] || React.createRef());\n  //   }\n  //   if (\n  //     elRefs.current.length === length &&\n  //     elRefs.current[0].current !== null\n  //   ) {\n  //     setImgWidth(elRefs.current.map((el) => el.current.offsetWidth));\n  //   }\n  // }, [elRefs.current]);\n  // console.log(\"refs\", elRefs)\n  // const markers = images.paths.map((a, i) => (\n  //   <ImagesMarker\n  //     onClick={() => setActivePic(i)}\n  //     active={i === activePic}\n  //     key={i}\n  //   />\n  // ));\n  // const swapPicturesHandler = (direction) => {\n  //   if (activePic < images.paths.length - 1 && direction === \"right\") {\n  //     setActivePic((state) => state + 1);\n  //   }\n  //   if (activePic > 0 && direction === \"left\") {\n  //     setActivePic((state) => state - 1);\n  //   }\n  // };\n\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    size: \"2\",\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(Gallery, {\n    rowWidth: \"100%\",\n    rowHeight: \"100%\",\n    markerActiveColor: \"orange\",\n    markerInactiveColor: \"gray\",\n    items: images.paths,\n    childProps: {\n      alt: \"\".concat(images.alt)\n    },\n    navColor: \"black\",\n    navInnerColor: \"white\",\n    navSize: 4,\n    navInnerHoverColor: \"orange\",\n    withNav: true,\n    navPosX: -100,\n    navPosY: 50,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), __jsx(Backdrop, {\n    forElement: false,\n    onClick: closeModal,\n    state: state,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(ImagesModal, \"l08ietNHdrtGCkDAHXgGOGRaKIY=\", false, function () {\n  return [useWindowDimension];\n});\n\n_c = ImagesModal;\nexport default ImagesModal; // <ImagesWrapper>{imgs}</ImagesWrapper>\n//         <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n//         <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n//           <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n//         </ImageArrow>\n//         <ImageArrow\n//           onClick={() => swapPicturesHandler(\"right\")}\n//           position=\"right\"\n//         >\n//           <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n//         </ImageArrow>\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesModal\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js"],"names":["React","useState","Fragment","useRef","useEffect","ImageInnerWrapper","Image","ImagesMarker","ViewImages","ImagesWrapper","ImagesMarkerWrapper","ImageArrow","FontAwesomeIcon","faChevronRight","faChevronLeft","useWindowDimension","Backdrop","Gallery","ImagesModal","images","state","closeModal","width","height","paths","alt"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,SAA5C,QAA6D,OAA7D;AACA,SACEC,iBADF,EAEEC,KAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,mBANF,EAOEC,UAPF,QAQO,sCARP;AASA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,cADF,EAEEC,aAFF,QAGO,mCAHP;AAIA,SAASC,kBAAT,QAAmC,gCAAnC;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAmC;AAAA;;AAAA,MAAhCC,MAAgC,QAAhCA,MAAgC;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,4BAC7BN,kBAAkB,EADW;AAAA;AAAA,MAC9CO,KAD8C;AAAA,MACvCC,MADuC,4BAGrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,GAAjB;AAAqB,IAAA,YAAY,EAAED,KAAnC;AAA0C,IAAA,aAAa,EAAEC,MAAzD;AAAiE,IAAA,KAAK,EAAEH,KAAxE;AAA+E,IAAA,CAAC,MAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACA,IAAA,QAAQ,EAAC,MADT;AAEA,IAAA,SAAS,EAAC,MAFV;AAGA,IAAA,iBAAiB,EAAC,QAHlB;AAIA,IAAA,mBAAmB,EAAC,MAJpB;AAKA,IAAA,KAAK,EAAED,MAAM,CAACK,KALd;AAMA,IAAA,UAAU,EAAE;AACVC,MAAAA,GAAG,YAAKN,MAAM,CAACM,GAAZ;AADO,KANZ;AASA,IAAA,QAAQ,EAAC,OATT;AAUA,IAAA,aAAa,EAAC,OAVd;AAWA,IAAA,OAAO,EAAE,CAXT;AAYA,IAAA,kBAAkB,EAAC,QAZnB;AAaA,IAAA,OAAO,EAAE,IAbT;AAcA,IAAA,OAAO,EAAE,CAAC,GAdV;AAeA,IAAA,OAAO,EAAE,EAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAmBE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAE,KAAtB;AAA6B,IAAA,OAAO,EAAEJ,UAAtC;AAAkD,IAAA,KAAK,EAAED,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBD,CAzED;;GAAMF,W;UACoBH,kB;;;KADpBG,W;AA2EN,eAAeA,WAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, Fragment, useRef, useEffect } from \"react\";\nimport {\n  ImageInnerWrapper,\n  Image,\n  ImagesMarker,\n  ViewImages,\n  ImagesWrapper,\n  ImagesMarkerWrapper,\n  ImageArrow,\n} from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { Gallery } from '../../UI/Swipeable/Swipeable';\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [width, height] = useWindowDimension();\n\n  // const imgs = images.paths.map((img, i) => (\n  //   <ImageInnerWrapper key={i}>\n  //     <Image\n  //       displayWidth={width}\n  //       displayHeight={height}\n  //       id={img}\n  //       src={img}\n  //       alt={images.alt}\n  //       modal\n  //       slide={activePic}\n  //     />\n  //   </ImageInnerWrapper>\n  // ));\n\n  // useEffect(() => {\n  //   const length = imgs.length;\n  //   if (elRefs.current.length !== length) {\n  //     elRefs.current = Array(length)\n  //       .fill()\n  //       .map((_, i) => elRefs.current[i] || React.createRef());\n  //   }\n  //   if (\n  //     elRefs.current.length === length &&\n  //     elRefs.current[0].current !== null\n  //   ) {\n  //     setImgWidth(elRefs.current.map((el) => el.current.offsetWidth));\n  //   }\n  // }, [elRefs.current]);\n  \n  // console.log(\"refs\", elRefs)\n\n  // const markers = images.paths.map((a, i) => (\n  //   <ImagesMarker\n  //     onClick={() => setActivePic(i)}\n  //     active={i === activePic}\n  //     key={i}\n  //   />\n  // ));\n\n  // const swapPicturesHandler = (direction) => {\n  //   if (activePic < images.paths.length - 1 && direction === \"right\") {\n  //     setActivePic((state) => state + 1);\n  //   }\n  //   if (activePic > 0 && direction === \"left\") {\n  //     setActivePic((state) => state - 1);\n  //   }\n  // };\n  return (\n    <Fragment>\n      <ViewImages size='2' displayWidth={width} displayHeight={height} state={state} s>\n        <Gallery \n        rowWidth=\"100%\"\n        rowHeight=\"100%\"\n        markerActiveColor=\"orange\"\n        markerInactiveColor=\"gray\"\n        items={images.paths}\n        childProps={{\n          alt: `${images.alt}`,\n        }}\n        navColor=\"black\"\n        navInnerColor=\"white\"\n        navSize={4}\n        navInnerHoverColor=\"orange\"\n        withNav={true}\n        navPosX={-100}\n        navPosY={50}/>\n      </ViewImages>\n      <Backdrop forElement={false} onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n\nexport default ImagesModal;\n\n\n// <ImagesWrapper>{imgs}</ImagesWrapper>\n//         <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n//         <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n//           <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n//         </ImageArrow>\n//         <ImageArrow\n//           onClick={() => swapPicturesHandler(\"right\")}\n//           position=\"right\"\n//         >\n//           <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n//         </ImageArrow>"]},"metadata":{},"sourceType":"module"}