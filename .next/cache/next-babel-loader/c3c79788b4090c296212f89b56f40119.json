{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as actions from '../actions/productsActions';\nimport { setState } from '../../Utilities/utilities';\nconst initialState = {\n  activeCatalog: 'bioCloths',\n  activeCategory: 'allSizes',\n  overview: {\n    bioCloths: {\n      label: \"BIO EMBALAGENS\",\n      background: '/Products/Cloth3.jpg',\n      path: \"bio-embalagens\",\n      products: [{\n        id: 'allSizes',\n        label: \"MIX\"\n      }, {\n        id: 'medium',\n        label: \"MEDIO\"\n      }, {\n        id: 'big',\n        label: \"GRANDE\"\n      }]\n    },\n    soapWorks: {\n      label: \"SABOARIA\",\n      background: '/Products/saboaria1.jpg',\n      path: \"saboaria\",\n      products: [{\n        id: 'ofuro',\n        label: \"SAIS\"\n      }, {\n        id: 'greenClay',\n        label: \"SKINCARE\"\n      }, {\n        id: 'shampooConditioner',\n        label: \"CABELOS\"\n      }, {\n        id: 'soap',\n        label: \"SABONETE\"\n      }]\n    }\n  },\n  catalog: {\n    bioCloths: {\n      allSizes: {\n        1: {\n          images: ['Cloth1', 'Cloth2', 'Cloth3'],\n          stock: 20,\n          price: 10,\n          details: \"ipsum foo 1\",\n          label: \"Foo1\"\n        }\n      },\n      medium: {\n        1: {\n          images: ['Cloth2'],\n          stock: 10,\n          price: 50,\n          details: \"ipsum foo 2\",\n          label: \"Foo2\"\n        }\n      },\n      big: {\n        1: {\n          images: ['Cloth3'],\n          stock: 40,\n          price: 70,\n          details: \"ipsum foo 3\",\n          label: \"Foo3\"\n        }\n      }\n    },\n    soapWorks: {\n      ofuro: {\n        1: {\n          images: ['Soap1'],\n          stock: 20,\n          price: 10,\n          details: \"ipsum foo\",\n          label: \"Sal de banho 1\"\n        }\n      },\n      greenClay: {\n        1: {\n          images: ['Soap1'],\n          stock: 20,\n          price: 10,\n          details: \"ipsum foo\",\n          label: \"Argila Jobles\"\n        }\n      },\n      shampooConditioner: {\n        1: {\n          images: ['Soap1'],\n          stock: 20,\n          price: 10,\n          details: \"ipsum foo\",\n          label: \"Shampoo Little Joint\"\n        }\n      },\n      soap: {\n        1: {\n          images: ['Soap1'],\n          stock: 20,\n          price: 10,\n          details: \"Soap 1 ipsum foo\",\n          label: \"Sabnete 1\"\n        },\n        2: {\n          images: ['Soap2'],\n          stock: 20,\n          price: 10,\n          details: \"Soap 2 ipsum foo\",\n          label: \"Sabonete 2\"\n        },\n        3: {\n          images: ['Soap3'],\n          stock: 20,\n          price: 10,\n          details: \"Soap 3 ipsum foo\",\n          label: \"Sabonete 3\"\n        },\n        4: {\n          images: ['Soap3'],\n          stock: 20,\n          price: 10,\n          details: \"Soap 3 ipsum foo\",\n          label: \"Sabonete 4\"\n        }\n      }\n    }\n  }\n};\n\nconst toggleCatalog = (state, payload) => {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCatalog: payload.catalog,\n    activeCategory: payload.category\n  }));\n};\n\nconst toggleCategory = (state, payload) => {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCategory: payload.category\n  }));\n};\n\nexport const productsReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG:\n      return toggleCatalog(state, payload);\n\n    case actions.TOGGLE_CATEGORY:\n      return toggleCategory(state, payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/store/reducers/productsReducer.js"],"names":["actions","setState","initialState","activeCatalog","activeCategory","overview","bioCloths","label","background","path","products","id","soapWorks","catalog","allSizes","images","stock","price","details","medium","big","ofuro","greenClay","shampooConditioner","soap","toggleCatalog","state","payload","category","toggleCategory","productsReducer","type","TOGGLE_CATALOG","TOGGLE_CATEGORY"],"mappings":"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","sourcesContent":["import * as actions from '../actions/productsActions'\nimport {setState} from '../../Utilities/utilities'\n\n\nconst initialState = {\n  activeCatalog: 'bioCloths',\n  activeCategory: 'allSizes',\n  overview: {\n    bioCloths: {\n      label: \"BIO EMBALAGENS\",\n      background: '/Products/Cloth3.jpg',\n      path: \"bio-embalagens\",\n      products: [\n        {id: 'allSizes', label: \"MIX\"},\n        {id: 'medium', label: \"MEDIO\"},\n        {id: 'big', label: \"GRANDE\"}\n      ]\n    },\n      soapWorks: {\n        label: \"SABOARIA\",\n        background: '/Products/saboaria1.jpg',\n        path: \"saboaria\",\n        products: [\n          {id: 'ofuro',label: \"SAIS\"},\n          {id: 'greenClay', label: \"SKINCARE\"},\n          {id: 'shampooConditioner', label: \"CABELOS\"},\n          {id: 'soap', label: \"SABONETE\"}\n        ]\n      },\n  },\n  catalog: {\n    bioCloths: {\n        allSizes: {\n            1: {\n              images: ['Cloth1', 'Cloth2', 'Cloth3'],\n              stock: 20,\n              price: 10,\n              details: \"ipsum foo 1\",\n              label: \"Foo1\",\n          },\n        },\n        medium: {        \n            1: {\n              images: ['Cloth2'],\n              stock: 10,\n              price: 50,\n              details: \"ipsum foo 2\",\n              label: \"Foo2\",\n            },        \n        },\n        big: {     \n            1: {\n              images: ['Cloth3'],\n              stock: 40,\n              price: 70,\n              details: \"ipsum foo 3\",\n              label: \"Foo3\",        \n          },\n        },\n    },\n    soapWorks: {\n        ofuro: {\n          \n            1: {\n              images: ['Soap1'],\n              stock: 20,\n              price: 10,\n              details: \"ipsum foo\",\n              label: \"Sal de banho 1\",\n            },\n        },\n        greenClay: {\n          \n            1: {\n              images: ['Soap1'],\n              stock: 20,\n              price: 10,\n              details: \"ipsum foo\",\n              label: \"Argila Jobles\",\n            },\n        },\n        shampooConditioner: {\n          \n            1: {\n              images: ['Soap1'],\n              stock: 20,\n              price: 10,\n              details: \"ipsum foo\",\n              label: \"Shampoo Little Joint\",\n            },\n        },\n        soap: {\n          \n            1: {\n              images: ['Soap1'],\n              stock: 20,\n              price: 10,\n              details: \"Soap 1 ipsum foo\",\n              label: \"Sabnete 1\",\n            },\n            2: {\n              images: ['Soap2'],\n              stock: 20,\n              price: 10,\n              details: \"Soap 2 ipsum foo\",\n              label: \"Sabonete 2\",\n            },\n            3: {\n              images: ['Soap3'],\n              stock: 20,\n              price: 10,\n              details: \"Soap 3 ipsum foo\",\n              label: \"Sabonete 3\",\n            },\n            4: {\n              images: ['Soap3'],\n              stock: 20,\n              price: 10,\n              details: \"Soap 3 ipsum foo\",\n              label: \"Sabonete 4\",\n            },\n        },\n    },\n  },\n};\n\nconst toggleCatalog = (state, payload) => {\n  return setState({...state, activeCatalog: payload.catalog, activeCategory: payload.category})\n}\n\nconst toggleCategory = (state, payload) => {\n  return setState({...state, activeCategory: payload.category})\n}\n\nexport const productsReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG : return toggleCatalog(state, payload);\n    case actions.TOGGLE_CATEGORY : return toggleCategory(state, payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}