{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js\";\nvar __jsx = React.createElement;\nimport React, { useState, Fragment } from \"react\";\nimport { ImageInnerWrapper, Image, ImagesMarker, ViewImages, ImagesWrapper, ImagesMarkerWrapper, ImageArrow } from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport { useScrollPosition } from '../../Hooks/useScrollPosition';\n\nconst ImagesModal = ({\n  images,\n  state,\n  closeModal\n}) => {\n  const {\n    0: activePic,\n    1: setActivePic\n  } = useState(0);\n  const [width, height] = useWindowDimension();\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    const isShow = currPos.y >= prevPos.y;\n  }, [], false, true, 150);\n  const imgs = images.paths.map((img, i) => __jsx(ImageInnerWrapper, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(Image, {\n    displayWidth: width,\n    displayHeight: height,\n    id: img,\n    src: img,\n    alt: images.alt,\n    modal: true,\n    slide: activePic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n  const markers = images.paths.map((a, i) => __jsx(ImagesMarker, {\n    onClick: () => setActivePic(i),\n    active: i === activePic,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n\n  const swapPicturesHandler = direction => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic(state => state + 1);\n    }\n\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic(state => state - 1);\n    }\n  };\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(ViewImages, {\n    displayWidth: width,\n    displayHeight: height,\n    state: state,\n    s: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(ImagesWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, imgs), __jsx(ImagesMarkerWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, markers), __jsx(ImageArrow, {\n    onClick: () => swapPicturesHandler(\"left\"),\n    position: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronLeft,\n    size: \"4x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), __jsx(ImageArrow, {\n    onClick: () => swapPicturesHandler(\"right\"),\n    position: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faChevronRight,\n    size: \"4x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))), __jsx(Backdrop, {\n    forElement: false,\n    onClick: closeModal,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ImagesModal;","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ImagesModal.js"],"names":["React","useState","Fragment","ImageInnerWrapper","Image","ImagesMarker","ViewImages","ImagesWrapper","ImagesMarkerWrapper","ImageArrow","FontAwesomeIcon","faChevronRight","faChevronLeft","useWindowDimension","Backdrop","useScrollPosition","ImagesModal","images","state","closeModal","activePic","setActivePic","width","height","prevPos","currPos","isShow","y","imgs","paths","map","img","i","alt","markers","a","swapPicturesHandler","direction","length"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from \"react\";\nimport {\n  ImageInnerWrapper,\n  Image,\n  ImagesMarker,\n  ViewImages,\n  ImagesWrapper,\n  ImagesMarkerWrapper,\n  ImageArrow,\n} from \"../../StyledComponents/productsItems\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronRight,\n  faChevronLeft,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useWindowDimension } from \"../../Hooks/useWindowDimension\";\nimport { Backdrop } from \"../../StyledComponents/main\";\nimport {useScrollPosition} from '../../Hooks/useScrollPosition'\n\nconst ImagesModal = ({ images, state, closeModal }) => {\n  const [activePic, setActivePic] = useState(0);\n  const [width, height] = useWindowDimension();\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      const isShow = currPos.y >= prevPos.y;\n    },\n    [],\n    false,\n    true,\n    150\n  );\n\n  const imgs = images.paths.map((img, i) => (\n    <ImageInnerWrapper key={i}>\n      <Image\n        displayWidth={width}\n        displayHeight={height}\n        id={img}\n        src={img}\n        alt={images.alt}\n        modal\n        slide={activePic}\n      />\n    </ImageInnerWrapper>\n  ));\n\n  const markers = images.paths.map((a, i) => (\n    <ImagesMarker\n      onClick={() => setActivePic(i)}\n      active={i === activePic}\n      key={i}\n    />\n  ));\n\n  const swapPicturesHandler = (direction) => {\n    if (activePic < images.paths.length - 1 && direction === \"right\") {\n      setActivePic((state) => state + 1);\n    }\n    if (activePic > 0 && direction === \"left\") {\n      setActivePic((state) => state - 1);\n    }\n  };\n  return (\n    <Fragment>\n      <ViewImages displayWidth={width} displayHeight={height} state={state} s>\n        <ImagesWrapper>{imgs}</ImagesWrapper>\n        <ImagesMarkerWrapper>{markers}</ImagesMarkerWrapper>\n        <ImageArrow onClick={() => swapPicturesHandler(\"left\")} position=\"left\">\n          <FontAwesomeIcon icon={faChevronLeft} size=\"4x\" />\n        </ImageArrow>\n        <ImageArrow\n          onClick={() => swapPicturesHandler(\"right\")}\n          position=\"right\"\n        >\n          <FontAwesomeIcon icon={faChevronRight} size=\"4x\" />\n        </ImageArrow>\n      </ViewImages>\n      <Backdrop forElement={false} onClick={closeModal} state={state} />\n    </Fragment>\n  );\n};\n\nexport default ImagesModal;\n"]},"metadata":{},"sourceType":"module"}