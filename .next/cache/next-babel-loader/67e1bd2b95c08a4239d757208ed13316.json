{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actions from \"../actions/productsActions\";\nimport { setState } from \"../../Utilities/utilities\";\nimport Products from '../../DB/products.json';\nvar initialState = {\n  activeCatalog: \"bioCloths\",\n  activeCategory: \"allSizes\"\n};\n\nvar toggleCatalog = function toggleCatalog(state, payload) {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCatalog: payload.catalog,\n    activeCategory: Products.overview[id].products[0].id\n  }));\n};\n\nvar toggleCategory = function toggleCategory(state, payload) {\n  return setState(_objectSpread(_objectSpread({}, state), {}, {\n    activeCategory: payload.category\n  }));\n};\n\nexport var productsReducer = function productsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var payload = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG:\n      return toggleCatalog(state, payload);\n\n    case actions.TOGGLE_CATEGORY:\n      return toggleCategory(state, payload);\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/store/reducers/productsReducer.js"],"names":["actions","setState","Products","initialState","activeCatalog","activeCategory","toggleCatalog","state","payload","catalog","overview","id","products","toggleCategory","category","productsReducer","type","TOGGLE_CATALOG","TOGGLE_CATEGORY"],"mappings":";;;;;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,4BAAzB;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,WADI;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;;AAKA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACxC,SAAOP,QAAQ,iCACVM,KADU;AAEbH,IAAAA,aAAa,EAAEI,OAAO,CAACC,OAFV;AAGbJ,IAAAA,cAAc,EAAEH,QAAQ,CAACQ,QAAT,CAAkBC,EAAlB,EAAsBC,QAAtB,CAA+B,CAA/B,EAAkCD;AAHrC,KAAf;AAKD,CAND;;AAQA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACN,KAAD,EAAQC,OAAR,EAAoB;AACzC,SAAOP,QAAQ,iCAAMM,KAAN;AAAaF,IAAAA,cAAc,EAAEG,OAAO,CAACM;AAArC,KAAf;AACD,CAFD;;AAIA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAmC;AAAA,MAAlCR,KAAkC,uEAA1BJ,YAA0B;AAAA,MAAZK,OAAY;;AAChE,UAAQA,OAAO,CAACQ,IAAhB;AACE,SAAKhB,OAAO,CAACiB,cAAb;AACE,aAAOX,aAAa,CAACC,KAAD,EAAQC,OAAR,CAApB;;AACF,SAAKR,OAAO,CAACkB,eAAb;AACE,aAAOL,cAAc,CAACN,KAAD,EAAQC,OAAR,CAArB;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATM","sourcesContent":["import * as actions from \"../actions/productsActions\";\nimport { setState } from \"../../Utilities/utilities\";\nimport Products from '../../DB/products.json'\n\n\nconst initialState = {\n  activeCatalog: \"bioCloths\",\n  activeCategory: \"allSizes\",\n};\n\nconst toggleCatalog = (state, payload) => {\n  return setState({\n    ...state,\n    activeCatalog: payload.catalog,\n    activeCategory: Products.overview[id].products[0].id,\n  });\n};\n\nconst toggleCategory = (state, payload) => {\n  return setState({ ...state, activeCategory: payload.category });\n};\n\nexport const productsReducer = (state = initialState, payload) => {\n  switch (payload.type) {\n    case actions.TOGGLE_CATALOG:\n      return toggleCatalog(state, payload);\n    case actions.TOGGLE_CATEGORY:\n      return toggleCategory(state, payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}