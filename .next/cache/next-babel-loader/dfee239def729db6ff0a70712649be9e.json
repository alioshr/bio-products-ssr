{"ast":null,"code":"var _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/Products.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { ProductsWrapper, Category, CategoryTitle, CategoryWrapper } from \"../../StyledComponents/productsItems\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useProductsOverview } from \"../../store/actions/actionsIndex\";\n\nconst Products = ({}) => {\n  const dispatch = useDispatch();\n  const productsOverview = dispatch(useProductsOverview());\n  const {\n    0: navProducts,\n    1: showNavProducts\n  } = useState(false);\n\n  const navProductsToggleHandler = () => showNavProducts(state => !state);\n\n  return __jsx(ProductsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Dropdown, {\n    onProducts: true,\n    showDropDown: navProducts,\n    dropDownTogglerHandler: navProductsToggleHandler,\n    subItems: productsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), __jsx(Categories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Products;\n\nconst Categories = ({}) => {\n  return __jsx(CategoryWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(Category, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(CategoryTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"k\")));\n};","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/Products.js"],"names":["React","useState","useEffect","ProductsWrapper","Category","CategoryTitle","CategoryWrapper","Dropdown","useSelector","useDispatch","useProductsOverview","Products","dispatch","productsOverview","navProducts","showNavProducts","navProductsToggleHandler","state","Categories"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,eADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,eAJF,QAKO,sCALP;AAMA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kCAApC;;AAEA,MAAMC,QAAQ,GAAG,CAAC,EAAD,KAAQ;AACvB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,gBAAgB,GAAGD,QAAQ,CAACF,mBAAmB,EAApB,CAAjC;AACA,QAAM;AAAA,OAACI,WAAD;AAAA,OAAcC;AAAd,MAAiCd,QAAQ,CAAC,KAAD,CAA/C;;AACA,QAAMe,wBAAwB,GAAG,MAAMD,eAAe,CAAEE,KAAD,IAAW,CAACA,KAAb,CAAtD;;AAEA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,YAAY,EAAEH,WAFhB;AAGE,IAAA,sBAAsB,EAAEE,wBAH1B;AAIE,IAAA,QAAQ,EAAEH,gBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CADF;AAWD,CAjBD;;AAkBA,eAAeF,QAAf;;AAEA,MAAMO,UAAU,GAAG,CAAC,EAAD,KAAQ;AACzB,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADF;AAOD,CARD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ProductsWrapper,\n  Category,\n  CategoryTitle,\n  CategoryWrapper,\n} from \"../../StyledComponents/productsItems\";\nimport Dropdown from \"../../UI/Dropdown/Dropdown\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useProductsOverview } from \"../../store/actions/actionsIndex\";\n\nconst Products = ({}) => {\n  const dispatch = useDispatch();\n  const productsOverview = dispatch(useProductsOverview());\n  const [navProducts, showNavProducts] = useState(false);\n  const navProductsToggleHandler = () => showNavProducts((state) => !state);\n\n  return (\n    <ProductsWrapper>\n      <Dropdown\n        onProducts\n        showDropDown={navProducts}\n        dropDownTogglerHandler={navProductsToggleHandler}\n        subItems={productsOverview}\n      />\n    <Categories />  \n    </ProductsWrapper>\n  );\n};\nexport default Products;\n\nconst Categories = ({}) => {\n  return (\n    <CategoryWrapper>\n      <Category>\n        <CategoryTitle>k</CategoryTitle>\n      </Category>\n    </CategoryWrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}