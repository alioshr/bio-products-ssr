{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/HOC/Layout.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport Footer from \"./Footer\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\n\nvar Layout = function Layout(props) {\n  _s();\n\n  var store = useSelector(function (state) {\n    return state;\n  });\n\n  var _useState = useState(true),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  useScrollPosition(function (_ref) {\n    var prevPos = _ref.prevPos,\n        currPos = _ref.currPos;\n    var isShow = currPos.y > prevPos.y;\n    if (isShow !== visible) setVisible(isShow);\n  }, [visible], false, false, 150);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Toolbar, {\n    visible: visible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, props.children), __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Layout, \"4kTai/R0MvMQ2sNaD7Xx/oU55QQ=\", false, function () {\n  return [useSelector, useScrollPosition];\n});\n\n_c = Layout;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    drawerActive: state.navigationReducer.showSideDrawer,\n    hamButtonTouched: state.navigationReducer.hamButtonClicked\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/HOC/Layout.js"],"names":["React","useState","Toolbar","Footer","connect","useSelector","useScrollPosition","Layout","props","store","state","visible","setVisible","prevPos","currPos","isShow","y","children","mapStateToProps","drawerActive","navigationReducer","showSideDrawer","hamButtonTouched","hamButtonClicked"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAAA;;AACxB,MAAMC,KAAK,GAAGJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAJ;AAAA,GAAN,CAAzB;;AADwB,kBAEMT,QAAQ,CAAC,IAAD,CAFd;AAAA,MAEjBU,OAFiB;AAAA,MAERC,UAFQ;;AAIxBN,EAAAA,iBAAiB,CACf,gBAA0B;AAAA,QAAvBO,OAAuB,QAAvBA,OAAuB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACxB,QAAMC,MAAM,GAAGD,OAAO,CAACE,CAAR,GAAYH,OAAO,CAACG,CAAnC;AACA,QAAID,MAAM,KAAKJ,OAAf,EAAwBC,UAAU,CAACG,MAAD,CAAV;AACzB,GAJc,EAKf,CAAEJ,OAAF,CALe,EAMf,KANe,EAOf,KAPe,EAQf,GARe,CAAjB;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACS,QAAb,CAFF,EAGE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAtBD;;GAAMV,M;UACUF,W,EAGdC,iB;;;KAJIC,M;;AAwBN,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACR,KAAD,EAAW;AACjC,SAAO;AACLS,IAAAA,YAAY,EAAET,KAAK,CAACU,iBAAN,CAAwBC,cADjC;AAELC,IAAAA,gBAAgB,EAAEZ,KAAK,CAACU,iBAAN,CAAwBG;AAFrC,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CAACc,eAAD,CAAP,CAAyBX,MAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\nimport Footer from \"./Footer\";\nimport { connect, useSelector } from \"react-redux\";\nimport { useScrollPosition } from \"../../Hooks/useScrollPosition\";\n\nconst Layout = (props) => {\n  const store = useSelector(state => state);\n  const [visible, setVisible] = useState(true);\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      const isShow = currPos.y > prevPos.y;\n      if (isShow !== visible) setVisible(isShow);\n    },\n    [ visible],\n    false,\n    false,\n    150\n  );\n  \n  return (\n    <div>\n      <Toolbar visible={visible}  />\n      <main>{props.children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    drawerActive: state.navigationReducer.showSideDrawer,\n    hamButtonTouched: state.navigationReducer.hamButtonClicked,\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n"]},"metadata":{},"sourceType":"module"}