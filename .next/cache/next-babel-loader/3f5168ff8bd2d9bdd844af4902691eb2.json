{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Dev/Desktop/bio-products-ssr/Components/Products/ProductPanel.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, Fragment } from \"react\";\nimport ImagesModal from \"./ImagesModal\";\nimport { Price, PriceSpan, Off, StockAlert, Icons, IconInner, IconSpan, Panel, Product, Hr, Span, Name, Image } from \"../../StyledComponents/productsItems\";\nimport { Transition } from \"react-transition-group\";\nimport Link from \"next/link\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faShoppingBag, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\"; //get state and map it from firebase\n\nvar ProductPanel = function ProductPanel(_ref) {\n  _s();\n\n  var products = _ref.products,\n      activeCatalog = _ref.activeCatalog,\n      activeCategory = _ref.activeCategory;\n\n  var _useState = useState(false),\n      showImagesModal = _useState[0],\n      setShowImagesModal = _useState[1];\n\n  var _useState2 = useState(),\n      activeImages = _useState2[0],\n      setActiveImages = _useState2[1];\n\n  var imagesModalHandler = function imagesModalHandler(images) {\n    setActiveImages(images);\n    setShowImagesModal(true);\n  };\n\n  var prod = [];\n\n  for (var key in products) {\n    prod.push(_objectSpread(_objectSpread({\n      id: key\n    }, products[key]), {}, {\n      images: _objectSpread(_objectSpread({}, products[key].images), {}, {\n        paths: Object.values(products[key].images.paths)\n      })\n    }));\n  }\n\n  var prods = prod.map(function (p) {\n    return __jsx(Product, {\n      key: p.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, __jsx(StockCTA, {\n      stock: p.stock,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }), __jsx(OffPrice, {\n      off: p.off,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }), __jsx(Image, {\n      onClick: function onClick() {\n        return imagesModalHandler(p.images);\n      },\n      src: p.images.paths[0],\n      alt: p.images.alt,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }), __jsx(Name, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, p.name), __jsx(Span, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, \"Estoque: \", p.stock, \" unidades\"), __jsx(Hr, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), __jsx(Prices, {\n      price: p.price,\n      off: p.off,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), __jsx(IconPanel, {\n      path: \"/product/\".concat(activeCatalog, \"?activeCategory=\").concat(activeCategory, \"&id=\").concat(p.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }));\n  });\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, __jsx(Transition, {\n    \"in\": showImagesModal,\n    timeout: 400,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, function (state) {\n    return __jsx(ImagesModal, {\n      images: activeImages,\n      closeModal: function closeModal() {\n        return setShowImagesModal(false);\n      },\n      state: state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    });\n  }), __jsx(Panel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, prods));\n};\n\n_s(ProductPanel, \"htXjNHCm2cqna8etdwazpGhLceE=\");\n\n_c = ProductPanel;\nexport default ProductPanel;\n\nvar IconPanel = function IconPanel(_ref2) {\n  var _jsx;\n\n  var path = _ref2.path;\n  return __jsx(Icons, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, __jsx(Link, (_jsx = {\n    href: \"/product/\"\n  }, _defineProperty(_jsx, \"href\", path), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }), _jsx), __jsx(IconInner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faPlusCircle,\n    size: \"lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), __jsx(IconSpan, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Info\"))), __jsx(FontAwesomeIcon, {\n    icon: faShoppingBag,\n    size: \"2x\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c2 = IconPanel;\n\nvar StockCTA = function StockCTA(_ref3) {\n  var stock = _ref3.stock;\n  return __jsx(StockAlert, {\n    stock: stock,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }\n  }, \"\\xDAltimas Unidades!\");\n};\n\n_c3 = StockCTA;\n\nvar OffPrice = function OffPrice(_ref4) {\n  var off = _ref4.off;\n  return __jsx(Off, {\n    off: off,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 31\n    }\n  }, off, \"% OFF!\");\n};\n\n_c4 = OffPrice;\n\nvar Prices = function Prices(_ref5) {\n  var price = _ref5.price,\n      off = _ref5.off;\n\n  var value = __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"10 BRL\");\n\n  if (off) {\n    var offPrice = (price - price * off / 100).toFixed(2);\n    value = __jsx(Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, __jsx(PriceSpan, {\n      off: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, price, \" BRL\"), __jsx(PriceSpan, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, offPrice, \" BRL\"));\n  }\n\n  return __jsx(Price, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  }, value, \" / unid\");\n};\n\n_c5 = Prices;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ProductPanel\");\n$RefreshReg$(_c2, \"IconPanel\");\n$RefreshReg$(_c3, \"StockCTA\");\n$RefreshReg$(_c4, \"OffPrice\");\n$RefreshReg$(_c5, \"Prices\");","map":{"version":3,"sources":["/Users/Dev/Desktop/bio-products-ssr/Components/Products/ProductPanel.js"],"names":["React","useState","Fragment","ImagesModal","Price","PriceSpan","Off","StockAlert","Icons","IconInner","IconSpan","Panel","Product","Hr","Span","Name","Image","Transition","Link","FontAwesomeIcon","faShoppingBag","faPlusCircle","ProductPanel","products","activeCatalog","activeCategory","showImagesModal","setShowImagesModal","activeImages","setActiveImages","imagesModalHandler","images","prod","key","push","id","paths","Object","values","prods","map","p","stock","off","alt","name","price","state","IconPanel","path","StockCTA","OffPrice","Prices","value","offPrice","toFixed"],"mappings":"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","sourcesContent":["import React, {useState, Fragment} from \"react\";\nimport ImagesModal from \"./ImagesModal\";\nimport {\n  Price,\n  PriceSpan,\n  Off,\n  StockAlert,\n  Icons,\n  IconInner,\n  IconSpan,\n  Panel,\n  Product,\n  Hr,\n  Span,\n  Name,\n  Image,\n} from \"../../StyledComponents/productsItems\";\nimport { Transition } from \"react-transition-group\";\nimport Link from \"next/link\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faShoppingBag,\n  faPlusCircle\n} from \"@fortawesome/free-solid-svg-icons\";\n\n\n\n//get state and map it from firebase\nconst ProductPanel = ({ products, activeCatalog, activeCategory }) => {\n  const [showImagesModal, setShowImagesModal] = useState(false);\n  const [activeImages, setActiveImages] = useState();\n\n  const imagesModalHandler = (images) => {\n    setActiveImages(images);\n    setShowImagesModal(true);\n  };\n  const prod = [];\n  for (let key in products) {\n    prod.push({\n      id: key,\n      ...products[key],\n      images: {\n        ...products[key].images,\n        paths: Object.values(products[key].images.paths),\n      },\n    });\n  }\n\n  const prods = prod.map((p) => (\n    <Product key={p.id}>\n      <StockCTA stock={p.stock} />\n      <OffPrice off={p.off} />\n      <Image\n        onClick={() => imagesModalHandler(p.images)}\n        src={p.images.paths[0]}\n        alt={p.images.alt}\n      />\n      <Name>{p.name}</Name>\n      <Span>Estoque: {p.stock} unidades</Span>\n      <Hr />\n      <Prices price={p.price} off={p.off} />\n      <IconPanel\n        path={`/product/${activeCatalog}?activeCategory=${activeCategory}&id=${p.id}`}\n      />\n    </Product>\n  ));\n  return (\n    <Fragment>\n      <Transition in={showImagesModal} timeout={400} mountOnEnter unmountOnExit>\n        {(state) => (\n          <ImagesModal\n            images={activeImages}\n            closeModal={() => setShowImagesModal(false)}\n            state={state}\n          />\n        )}\n      </Transition>\n      <Panel>{prods}</Panel>\n    </Fragment>\n  );\n};\n\nexport default ProductPanel;\n\nconst IconPanel = ({ path }) =>  {\n\n  return  (\n    <Icons>\n      <Link href=\"/product/\" href={path}>\n        <IconInner>\n          <FontAwesomeIcon icon={faPlusCircle} size=\"lg\" />\n          <IconSpan>Info</IconSpan>\n        </IconInner>\n      </Link>\n      <FontAwesomeIcon icon={faShoppingBag} size=\"2x\" />\n    </Icons>\n  )\n};\n\nconst StockCTA = ({ stock }) => (\n  <StockAlert stock={stock}>Últimas Unidades!</StockAlert>\n);\n\nconst OffPrice = ({ off }) => <Off off={off}>{off}% OFF!</Off>;\n\nconst Prices = ({ price, off }) => {\n  let value = <strong>10 BRL</strong>;\n  if (off) {\n    const offPrice = (price - (price * off) / 100).toFixed(2);\n    value = (\n      <Fragment>\n        <PriceSpan off>{price} BRL</PriceSpan>\n        <PriceSpan>{offPrice} BRL</PriceSpan>\n      </Fragment>\n    );\n  }\n  return <Price>{value} / unid</Price>;\n};\n"]},"metadata":{},"sourceType":"module"}